{
  "version": 3,
  "sources": [
    "/Users/kierannelson/Development/weLend/smart-contracts/projects/smart-contracts/smart_contracts/we_lend/weLendContract.algo.ts"
  ],
  "mappingsyrBG;;AAAA;AAAA;AAAA;;AAAA;AAzrBH;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyrBG;;;AAAA;;AAzCA;;AAAA;AAAA;AAAA;;AAAA;AAhpBH;;;AAAA;AAAA;;AAgpBG;;;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AArDA;;AAAA;AAAA;AAAA;;AAAA;AA9kBH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AA8kBG;;;AAAA;;AAJD;;AAAA;AAAA;AAAA;;AAAA;AA1kBF;;;AAAA;AAAA;;AA0kBE;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAtkBF;;;AAAA;AAAA;;AAskBE;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA7EC;;AAAA;AAAA;AAAA;;AAAA;AAzfH;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAyfG;;;AAAA;;AAvKA;;AAAA;AAAA;AAAA;;AAAA;AAlVH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAkVG;;;AAAA;;AAzBA;;AAAA;AAAA;AAAA;;AAAA;AAzTH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAyTG;;;AAAA;;AA/BA;;AAAA;AAAA;AAAA;;AAAA;AA1RH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AA0RG;;;AAAA;;AA9CA;;AAAA;AAAA;AAAA;;AAAA;AA5OH;;;AAAA;;;AA4OG;;;AAAA;;AAhDD;;AAAA;AAAA;AAAA;;AAAA;AA5LF;;;AAAA;AA4LE;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AApCA;;AAAA;AAAA;AAAA;;AAAA;AAxJF;;;AAAA;AAAA;;;AAAA;AAwJE;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AA5HF;;;AAAA;;;AA4HE;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AArDC;;AAAA;AAAA;AAAA;;AAAA;AAvDH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAuDG;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAjDH;;;AAAA;AAAA;;AAAA;;;AAAA;AAiDG;;;AAAA;;AAAD;;;AAlCA;;AAoCE;;AAAA;AAC2B;;AAAA;AAjD7B;AAiDE;AAAA;;AAGF;;;AASgB;;AAjDhB;AAAA;;AAAA;AAAA;AAiDS;AAAP;AAEA;;AAAA;;AAnDF;AAAA;;AAAA;AAAA;AAmDE;AAAA;;;AAAA;;AAAA;;AAEU;;;;AAFV;AAAA;;;;AAAA;AAhDF;;AAqDE;;AAAA;AAlDF;;AAmDE;;AAAA;AAhDF;;AAiDE;;AAAA;AA9CF;;AA+CE;;AAAA;AAhCF;;AAiCkC;AAAhC;AA9BF;;AA+B0C;AAAxC;AA7BF;;AA8BwB;AAAtB;AApEF;;AAqE+B;AAA7B;AAlEF;AAmE8B;AAA5B;AAxCF;;AAyCmC;AAAjC;AAnDF;;AAoDE;;AAAA;AAGA;AAE0B;;AAnF5B;AAAA;AAAA;AAAA;AAoF0C;AACvB;;;;;;;AAJjB;;;AAAA;;;AAAA;AAjFF;AAAA;AAAA;AAAA;AA0FmD;AAClC;AAEI;;AACE;;AAAA;;AAAA;AACG;;AAAA;;AAAA;AAEJ;;AACiB;;AAAA;;AAAA;AAAvB;;;AAAA;AAAA;AAlGhB;AAAA;AAAA;AAAA;AAmGiB;;;AAAA;AAAA;;;;;;;AAHI;;;;;;;;;AALJ;;;;AAAA;;;AAAA;;;AAWW;AAnG5B;;AAmGE;AAAA;;;;;;AAhGF;AAAA;;AAAA;AAAA;AAoGE;AAjGF;AAAA;AAAA;AAAA;AAqGE;AAvEF;AAAA;;AAAA;AAAA;AA2EE;AAxEF;AAAA;;AAAA;AAAA;AA4EE;AAGF;;;AACgB;;AA9GhB;AAAA;;AAAA;AAAA;AA8GS;AAAP;AAGgB;;AAAA;AAFoD;;AAAA;;AAG5D;;AAH4D;AAAA;AAAA;AAKA;;AAAA;;AAG5D;;AAH4D;AAAA;AAAA;AAKO;;AAAA;AAGnE;;AAHmE;AAAA;AAQ9C;;AAAA;AACA;;AAAA;AACG;;AAAA;AALN;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnG5B;AAAA;;AAAA;AAAA;AA0GoE;AAAhC;AAAjB;AApHgC;;AAAA;AAAA;AAoHjD;AAAA;AA1GF;AAAA;;AAAA;AAAA;AA2GkE;AAAhC;AA3GlC;;AA2GE;AAAA;;AAGF;;;AACkC;;AAAA;AAzHiB;;AAAA;AAAA;AAyHc;AAAA;AAAA;AAAA;;AAAA;AACzD;AAAiB;;;AAAjB;AAAA;;AACuB;;AAEsB;AAA7C;AAAA;;AAE+B;AAAgE;;;;;;;;;;;;AAAhE;AAAA;AAAA;;AAI7B;;AAH4D;AAAA;AAAA;;AAMhE;;AAAA;AAAJ;;;AAC+B;;AAAA;AAGrB;;AAHqB;AAAA;AAczB;;AAAA;AAA2B;;AAA6B;AACxD;;AAAA;AAAoB;AACwD;AAA1B;;AAA0B;AAA5E;;AAAA;AAAqB;AACrB;AAA8B;AACpC;;AAAA;AAX+B;;AAAA;AAGrB;;AAHqB;AAAA;;;;AAcjC;;;AAlJA;AAAA;;AAAA;AAAA;AAoJ2B;AACJ;AAAG;;AAAA;;AAAA;AAAxB;;;AACkC;;AAAA;AAAA;AAhKe;;AAAA;AAAA;AAgKM;AAAA;;AAAA;AAG/C;;AAAA;;AAAQ;;;AACd;;AAAA;AAAA;;AALuC;AAAA;AAAA;;;;;AAOpB;;AAAc;AAAd;AAAd;;AAAA;AAAA;AAAP;;AAAA;AAGF;;;AACuB;AA7JvB;AAAA;;AAAA;AAAA;AA6J0B;;AAAA;AAAxB;;;AAC+C;;AAAA;AAxKuB;;AAAA;AAAA;AAwKF;AAAA;AACnD;AAAQ;AAA6B;;AAAA;AAAhD;AAAJ;;;AACS;AAAP;AAAA;AAH+D;;AAAA;AAAA;AAAA;;;;;AAM5D;AAAP;AAAA;AAGF;;;;AACuB;AAvKvB;AAAA;;AAAA;AAAA;AAuK0B;;AAAA;AAAA;;AAAA;AAAxB;AAC+C;AAlLuB;;AAAA;AAAA;AAkLF;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACnD;AAAQ;AAA6B;;AAAA;AAAhD;AAAJ;;;AACE;AAH+D;;AAAA;AAAA;AAAA;;;;;AAQrE;;;;AACuB;;AAhLvB;AAAA;;AAAA;AAAA;AAgL0B;;AAAA;AAAA;;AAAA;AAAxB;AAC+C;AA3LuB;;AAAA;AAAA;AAAA;AAAA;;AA2LF;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACnD;AAAA;;;AAAA;;AAAA;AAAQ;AAA6B;;AAAA;AAAhD;AAAJ;;;AACqD;;AAAA;AAAhB;;AAAgB;AAA7C;;AAAkB;AAGE;AAAA;;;AACP;AAAA;AAHoC;;AAAA;;AAAA;AAAA;AAAA;AAAvD;;AAAA;AAAA;AAKA;AAT+D;;AAAA;AAAA;AAAA;;;;;AAerE;;;AAzOA;AAAA;AAAA;AAAA;AA2OmD;AACnC;;AAhOhB;AAAA;;AAAA;AAAA;AAgOS;AAAP;AACyB;;AAAA;AAAlB;AAAA;;AAAA;AAAP;AACmB;;AAAA;AAAZ;;AAAA;AAAP;AACQ;;AAAA;;;AAAD;AAAP;AAEkD;;AAAA;;AAAA;AAG/B;;;;;;;;;;AAH+B;AAvMpD;AAAA;;AAAA;AAAA;AA4MqF;AAAxC;AAAjB;AAtN4C;;AAAA;AAAA;AAsNtE;AAAA;AA5MF;AAAA;;AAAA;AAAA;AA8MkF;AAAxC;AA9M1C;;AA8ME;AAAA;AACA;AAEmB;;AACO;AAET;;;;;;;;;;;AALjB;;;AAAA;;;AAAA;;AA8BF;;;AAvRA;AAAA;AAAA;AAAA;AAyRmD;AACjD;;AAAA;;AACwB;;AADxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAQS;;AAlSX;AAAA;AAAA;AAAA;AAmS6B;AAFJ;;AAAjB;AAIN;;;;;AAKA;AAE0B;;AAzS5B;AAAA;;AAAA;AAAA;AA0SyC;;;;;;;;;AAHvC;;;AAAA;;;AAAA;AApSF;AAAA;;AAAA;AAAA;AA4SE;AA5SF;;AA4SE;AAAA;AAzSF;AAAA;AAAA;AAAA;AA0SE;;AAAA;AA1SF;AA0SE;AAAA;;AA7SF;AAAA;;AAAA;AAAA;AA8PiE;AAAjC;AA3PhC;AAAA;AAAA;AAAA;AA6PmB;AAEa;;AAAA;AACG;AAA1B;;;;;;;;AA6CT;;;AAtTA;AAAA;AAAA;AAAA;AAwTmD;AACjD;;AAAA;;AACwB;;AADxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AA1C+B;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACD;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAGb;;AAAA;AACV;;AAAA;AA8CoC;;AAlU7C;AAAA;AAAA;AAAA;AAkUiG;AAAxF;;AAAA;AAAA;;AAAA;AAAP;AACA;AAE0B;;AArU5B;AAAA;AAAA;AAAA;AAsU0C;;;;;;;;;AAHxC;;;AAAA;;;AAAA;AA7TF;AAAA;;AAAA;AAAA;AAqUE;;AAAA;AArUF;;AAqUE;AAAA;AAlUF;AAAA;AAAA;AAAA;AAmUE;AAAA;AAnUF;AAmUE;AAAA;;;;;;AAGF;;;AA7SuD;AAqTb;;AArTa;AAqTL;AAAA;;AAGhD;;AAAA;;AACwB;;AADxB;AAAA;AAIO;;AAAA;;;AAAP;AACM;;AAAqC;;AAArC;AAAA;;AAGA;;AAAqB;;;AACI;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AACD;AAAA;;;;;;;;AAAA;;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAGb;;AAAA;AACX;;AAA+B;AAGgD;AAAZ;;AAAY;AAAzD;;;AACX;AAC0B;AAAb;AA9VhC;AAAA;;AAAA;AAAA;AAgWgC;AAAsC;AAAvC;AAAvB;AAvVR;AAAA;;AAAA;AAAA;AA0VuB;;AAAA;AAAwD;AAAzD;AACd;;AAAA;;AAAuB;AAAvB;AAAA;;AAAA;;AAvUR;AAAA;;AAAA;AAAA;AAwUE;AAxUF;;AAwUE;AAAA;AApXF;AAAA;AAAA;AAAA;AAuXsF;AAAtD;;AAAA;AACH;;AAArB;AAAqB;AACV;AACY;;AACL;AADK;;AAEF;AAArB;;AAGN;;;AAEsC;;AAA1B;;;AACJ;;;AAAA;AAhW6C;AAiW3B;;AAjW2B;AAiWnD;;AAAA;AAE0D;AAAvB;;AAAuB;AAApD;AAAA;;AAAyB;AACxB;;AAAA;AAAP;AAGA;AAEqC;;AAAhB;;AAAgB;AAClB;;;;;;AAHnB;;;;AAAA;;;AAAA;AAQqD;;AAAjB;;AAAiB;AAA/C;;AAAA;AAAA;;AAA0B;AAE1B;AAAA;;AAAA;AAAA;;AAAkB;AACsB;;AAAb;;AAAa;AAAxC;;AAAuB;AAGf;AAEK;;AACI;;AAAA;;;AAAR;;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AA1ZnB;AAAA;AAAA;AAAA;AA0ZmB;AA1ZnB;AAAA;AAAA;AAAA;AA2ZkB;;AAAA;AAAA;AAGM;;AACA;;AACD;;AACE;AAGH;;AACd;;AADA;AAAA;;AAAA;AAGA;;AAHA;AAIO;;AAAA;AAJP;AAAA;;AAAA;AAKA;;AALA;AAM0B;;AAAnB;AANP;;;AAFe;;;;;;;;;;;;;;;AALL;;;;;;;;;;;;;;;;;AANA;;;;AAAA;;;AAAA;;;AAwBS;;AAAA;;;AAEH;;AAAA;AAEM;;AAAA;AACH;;AAAA;;;AACJ;;AAAA;AACwB;;AAAnB;AARgB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AA5YW;AA4Y3B;;AA5Y2B;AA4YnD;AAAA;AA1YJ;AAAA;;AAAA;AAAA;AAoZsE;AAAjC;AApZrC;;AAoZI;AAAA;AACA;;AAAA;AAAA;;;AAQF;AAE0B;;AAnc5B;AAAA;AAAA;AAAA;AAoc0C;;;;;;;;;AAHxC;;;AAAA;;;AAAA;;AALS;;AAAA;AAAP;AACwE;;AAAxE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;;;;AAaJ;;;AAOgB;AAEC;;;AAAA;;AAAA;AAAA;AAAwC;;;AAAxC;AAndjB;AAAA;AAAA;AAAA;AAmdiB;AAET;;AACA;;AADA;AAAA;;AAAA;AAGA;;AAHA;AAIO;;AAAA;AAJP;AAAA;;AAAA;AAKA;;AALA;AAM0B;;AAAnB;AANP;AAOc;;AAGD;AA/drB;AAAA;AAAA;AAAA;AAgegB;;AAAA;AAAA;AAEK;;AACE;AACF;;;;;;;;;;;;;;;;;;;AAPL;;;;;;;;;;AAZA;;;;AAAA;;;AAAA;;;AA0BM;;AAAA;AACJ;;AAAA;AA5elB;AAAA;AAAA;AAAA;AA+eqB;;AAAA;AACwB;;AAAnB;AARO;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAtcsB;AAAA;;AAAA;AAgdrD;AAAA;AA9cF;AAAA;;AAAA;AAAA;AA+coE;AAAjC;AA/cnC;;AA+cE;AAAA;;AAGF;;;AApduD;AAAA;;AAAA;AAsdrB;AAAA;AAAA;;AAAhC;AAC2B;;AAAP;;AAAA;;AAAA;;AACpB;AAC4C;AAAA;;AAAA;AAC5C;AAIiB;;;;;;;;;;;AAJjB;;;AAAA;;;AAAA;AASA;AAE0B;;;;;;AAET;;;;;;;;;AAJjB;;;AAAA;;;AAAA;;AAUF;;;AACqB;;AAAb;AACA;;AAAc;;AAAqB;AAAnC;AAAA;;AAEF;AAAJ;;;AAAiB;;AAAA;AAAA;;AAAA;;AAAA;AAEX;;AAAA;AAAA;;AAAiB;AACjB;;AAA2B;;AAAuB;AAjgB1D;AAAA;;AAAA;AAAA;AAqgBqB;;AAAA;AAEuB;AAAf;AAER;;AAAA;AAriBU;;;;;AAuiBJ;AAtgB3B;AAAA;;AAAA;AAAA;AAygB+B;AAAvB;AAAuB;AAGN;;AAAA;AAC8B;AAAnB;AAG5B;AAA2B;AAjiBnC;AAAA;AAAA;AAAA;AAqiBE;;AAAA;AAriBF;AAqiBE;AAAA;AAlgBF;AAAA;;AAAA;AAAA;AAogBE;AApgBF;;AAogBE;AAAA;AAI6B;AAIH;;AAAA;;;AACE;;AAAA;;;AACD;;AAAA;;;AACJ;;AAAA;;;AACG;;AAAA;AACA;;AAAA;;;AACA;;AAAA;;;AACF;;AAAA;AARjB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAP;;AAAA;;AAAA;;AAAA;AAYF;;;AAjiBuD;AAAA;;AAAA;AAkiBZ;AAAA;AAAzC;AAGF;;;AAriBuD;AAAA;;AAAA;AAsiBZ;AAAA;AAAM;;AAAgB;AAA/D;AAGF;;;;;AA3kBA;AAAA;AAAA;AAAA;AA6kBmD;AACjD;;AAAA;;AACwB;;AADxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAM2C;;AAA1B;;;AACJ;;;AAAA;AAAA;AAnjBwC;AAojB7B;;AApjB6B;AAojBrD;;AAAA;AAEuD;;AAA/B;;;AAGK;AADW;;AACX;AAAtB;;AAAA;;AAAA;AAAP;AACM;;AAAwB;AAAxB;AAAA;;AAGN;AAGmB;;;;;;;AAHnB;;;;AAAA;;;AAAA;AAOA;;;AApkBqD;AAwkB3B;;AAxkB2B;AAwkBnB;;AAtkBpC;AAAA;;AAAA;AAAA;AAukBsE;AAAjC;AAvkBrC;;AAukBI;AAAA;AAEA;AAE0B;;AACkB;AAAA;AAAlB;;AAAkB;AACC;AAAjB;;AAAiB;;;;;;;AAJ7C;;;AAAA;;;AAAA;;AAW0B;AAAb;;AAAa;AACb;;AAAA;;;AACJ;;AACqB;;AAAjB;;AAAiB;AAL9B;;AAAA;;AAAA;;;;;;;;AAYY;;AAtnBhB;AAAA;;AAAA;AAAA;AAsnBS;AAAP;AACA;AAvnBF;AAAA;;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAsoB0C;AA1lB1C;AAAA;;AAAA;AAAA;;;;;;;AAulBE;;;AAAA;;;AAAA;AAvlBF;;AA8lBwB;AAAtB;;AAGF;;;AA3mBuD;AAAA;;AAAA;AAAA;;AA6mBrB;AAAA;;AAAhC;AACmD;AAAA;AAEnD;;;AAAA;;AAGM;;AAAyB;;;AACJ;;AAAP;AAAA;;AAAA;;AAChB;;;AACF;AAE0B;;AACuB;;AAAA;AAAhB;;AAAgB;AAES;AAAvB;;AAAuB;;;;;;;;;;;AAL1D;;;AAAA;;;AAAA;AAWF;AAEmD;;AAAA;AAAhB;;AAAgB;AAChC;;;;;;AAHnB;;;;AAAA;;;AAAA;AAS2C;AAAvB;;AAAuB;AACV;;AAAb;;AAAa;AACb;;AAAA;;;AAEiB;;AAAjB;;AAAiB;AALrC;;AAAA;;AAAA;;AAAA;;;AAQA;;AAAA;AAAA;;AAGF;;;;;AAppBuD;AAAA;;AAAA;AAAA;;AAspBrB;AAAA;;AAAhC;AACmD;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACnD;AAAA;;AAAA;AAEM;AAAqC;;AAAiB;AAAtD;AAAA;;AACA;AAA+B;;AAAuB;AAAtD;AAAA;;AAAA;;AAC2D;;AAAkB;AAAhD;AAAA;AAAA;;AACR;;;AAEe;AAAhB;;AAAgB;AAAA;AAAA;;AAAnC;;AAAA;AAAP;AAGyE;;AAAY;AAAzD;;;AACX;AAC0B;AAAb;AACxB;AAAA;;AAAa;AArrBrB;AAAA;;AAAA;AAAA;AAsrBS;;AAAA;AAAP;AAEkC;AAAL;AAxrB/B;AAAA;;AAAA;AAAA;AAwrB8B;AAA8C;AAA9C;AACmC;AAAd;AAAJ;AAAA;AAAjB;AAE5B;;AAAA;;AA7sBF;AAAA;AAAA;AAAA;AA8sB8C;AAD5C;AAAA;;;AAAA;;AAAA;;AAEwB;;AAFxB;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;AAAA;AAS2B;;AAA4E;;AAAhB;;AAAgB;AAAA;AAAA;;AAAnF;;AAAA;;AAChB;;;AACF;AAE0B;;;;;;;;;;;;;;;;AAF1B;;;AAAA;;;AAAA;AAUF;AAGmB;;;;;;;;AAHnB;;;;AAAA;;;AAAA;AAQyB;;AAAA;;AAtsB3B;AAAA;;AAAA;AAAA;AAusBoE;AAAjC;AAvsBnC;;AAusBE;AAAA;AAGA;AAGiC;;AAAA;AAAA;;;;;;;;;;;;;;AAHjC;;;AAAA;;;AAAA;AAQM;;AAAA;AAAmB;AACzB;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 4 10000 4294967296"
    },
    "13": {
      "op": "bytecblock \"base_token_id\" 0x151f7c75 \"loan_record\" \"total_deposits\" \"active_loan_records\" \"accepted_collaterals_count\" \"admin_account\" \"fee_pool\" \"circulating_lst\" \"oracle_pools_count\" \":\" \"accepted_collaterals\" 0x09ef525f 0xae859f3b \"liq_threshold_bps\" \"oracle_pool\" \"ltv_bps\" \"interest_bps\" \"origination_fee_bps\" \"protocol_interest_fee_bps\" \"lst_token_id\" \"asset_1_cumulative_price\" \"asset_2_cumulative_price\" \"cumulative_price_update_timestamp\""
    },
    "393": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "395": {
      "op": "bz main_after_if_else@26",
      "stack_out": []
    },
    "398": {
      "op": "pushbytess 0x3b01665e 0x494bc3f7 // method \"createApplication(account,uint64)void\", method \"initApplication(pay,uint64,uint64,uint64,uint64,uint64)void\"",
      "defined_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)"
      ]
    },
    "410": {
      "op": "bytec 12 // method \"getCirculatingLST()uint64\"",
      "defined_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(getCirculatingLST()uint64)"
      ]
    },
    "412": {
      "op": "bytec 13 // method \"getTotalDeposits()uint64\"",
      "defined_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(getTotalDeposits()uint64)"
      ]
    },
    "414": {
      "op": "pushbytess 0x8925c50f 0x6c6337c0 0x31274359 0x8bbde2aa 0xd4bfb233 0xb014f687 0x3acbfb6f 0x50c57985 0xd501c95d 0x6177ca28 0xf676074f 0xabaf9805 0x36af3160 0x96da416e 0xe9c33c1e 0x554adf13 // method \"getOraclePoolsCount()uint64\", method \"getAcceptedCollateralsCount()uint64\", method \"addOraclePool(address,uint64)void\", method \"getOraclePrice(uint64,uint64)uint64\", method \"getPricesFromOracles(uint64)uint64\", method \"addNewCollateralType(uint64,uint64)void\", method \"depositASA(axfer,uint64)void\", method \"withdrawDeposit(axfer,uint64,uint64)void\", method \"borrow(axfer,uint64,uint64,uint64)void\", method \"claimLoanRecordASA(account,asset)void\", method \"getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64)\", method \"getLoanRecordASAId(account)uint64\", method \"repayLoan(axfer,uint64)void\", method \"withdrawFees()void\", method \"accrueLoanInterest(account)void\", method \"buyout(account,account,axfer)void\"",
      "defined_out": [
        "Method(accrueLoanInterest(account)void)",
        "Method(addNewCollateralType(uint64,uint64)void)",
        "Method(addOraclePool(address,uint64)void)",
        "Method(borrow(axfer,uint64,uint64,uint64)void)",
        "Method(buyout(account,account,axfer)void)",
        "Method(claimLoanRecordASA(account,asset)void)",
        "Method(createApplication(account,uint64)void)",
        "Method(depositASA(axfer,uint64)void)",
        "Method(getAcceptedCollateralsCount()uint64)",
        "Method(getCirculatingLST()uint64)",
        "Method(getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getLoanRecordASAId(account)uint64)",
        "Method(getOraclePoolsCount()uint64)",
        "Method(getOraclePrice(uint64,uint64)uint64)",
        "Method(getPricesFromOracles(uint64)uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(repayLoan(axfer,uint64)void)",
        "Method(withdrawDeposit(axfer,uint64,uint64)void)",
        "Method(withdrawFees()void)"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(getOraclePoolsCount()uint64)",
        "Method(getAcceptedCollateralsCount()uint64)",
        "Method(addOraclePool(address,uint64)void)",
        "Method(getOraclePrice(uint64,uint64)uint64)",
        "Method(getPricesFromOracles(uint64)uint64)",
        "Method(addNewCollateralType(uint64,uint64)void)",
        "Method(depositASA(axfer,uint64)void)",
        "Method(withdrawDeposit(axfer,uint64,uint64)void)",
        "Method(borrow(axfer,uint64,uint64,uint64)void)",
        "Method(claimLoanRecordASA(account,asset)void)",
        "Method(getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getLoanRecordASAId(account)uint64)",
        "Method(repayLoan(axfer,uint64)void)",
        "Method(withdrawFees()void)",
        "Method(accrueLoanInterest(account)void)",
        "Method(buyout(account,account,axfer)void)"
      ]
    },
    "496": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(accrueLoanInterest(account)void)",
        "Method(addNewCollateralType(uint64,uint64)void)",
        "Method(addOraclePool(address,uint64)void)",
        "Method(borrow(axfer,uint64,uint64,uint64)void)",
        "Method(buyout(account,account,axfer)void)",
        "Method(claimLoanRecordASA(account,asset)void)",
        "Method(createApplication(account,uint64)void)",
        "Method(depositASA(axfer,uint64)void)",
        "Method(getAcceptedCollateralsCount()uint64)",
        "Method(getCirculatingLST()uint64)",
        "Method(getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getLoanRecordASAId(account)uint64)",
        "Method(getOraclePoolsCount()uint64)",
        "Method(getOraclePrice(uint64,uint64)uint64)",
        "Method(getPricesFromOracles(uint64)uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(repayLoan(axfer,uint64)void)",
        "Method(withdrawDeposit(axfer,uint64,uint64)void)",
        "Method(withdrawFees()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication(account,uint64)void)",
        "Method(initApplication(pay,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(getCirculatingLST()uint64)",
        "Method(getTotalDeposits()uint64)",
        "Method(getOraclePoolsCount()uint64)",
        "Method(getAcceptedCollateralsCount()uint64)",
        "Method(addOraclePool(address,uint64)void)",
        "Method(getOraclePrice(uint64,uint64)uint64)",
        "Method(getPricesFromOracles(uint64)uint64)",
        "Method(addNewCollateralType(uint64,uint64)void)",
        "Method(depositASA(axfer,uint64)void)",
        "Method(withdrawDeposit(axfer,uint64,uint64)void)",
        "Method(borrow(axfer,uint64,uint64,uint64)void)",
        "Method(claimLoanRecordASA(account,asset)void)",
        "Method(getLoanRecord(account)(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64))",
        "Method(getLoanRecordASAId(account)uint64)",
        "Method(repayLoan(axfer,uint64)void)",
        "Method(withdrawFees()void)",
        "Method(accrueLoanInterest(account)void)",
        "Method(buyout(account,account,axfer)void)",
        "tmp%2#0"
      ]
    },
    "499": {
      "op": "match main_createApplication_route@3 main_initApplication_route@4 main_getCirculatingLST_route@5 main_getTotalDeposits_route@6 main_getOraclePoolsCount_route@7 main_getAcceptedCollateralsCount_route@8 main_addOraclePool_route@9 main_getOraclePrice_route@10 main_getPricesFromOracles_route@11 main_addNewCollateralType_route@12 main_depositASA_route@13 main_withdrawDeposit_route@14 main_borrow_route@15 main_claimLoanRecordASA_route@16 main_getLoanRecord_route@17 main_getLoanRecordASAId_route@18 main_repayLoan_route@19 main_withdrawFees_route@20 main_accrueLoanInterest_route@21 main_buyout_route@22",
      "stack_out": []
    },
    "541": {
      "block": "main_after_if_else@26",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "542": {
      "op": "return",
      "stack_out": []
    },
    "543": {
      "block": "main_buyout_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%120#0"
      ],
      "stack_out": [
        "tmp%120#0"
      ]
    },
    "545": {
      "op": "!",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "546": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "547": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "549": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "550": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "553": {
      "op": "btoi",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "554": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0"
      ]
    },
    "556": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%7#0",
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0",
        "reinterpret_bytes[1]%7#0"
      ]
    },
    "559": {
      "op": "btoi",
      "defined_out": [
        "tmp%125#0",
        "tmp%126#0"
      ],
      "stack_out": [
        "tmp%125#0",
        "tmp%126#0"
      ]
    },
    "560": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%125#0",
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%125#0",
        "tmp%127#0"
      ]
    },
    "562": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%125#0",
        "tmp%127#0",
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%125#0",
        "tmp%127#0",
        "tmp%128#0"
      ]
    },
    "564": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%125#0",
        "tmp%127#0",
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%125#0",
        "tmp%127#0",
        "tmp%128#0",
        "1"
      ]
    },
    "565": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%125#0",
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%125#0",
        "tmp%127#0",
        "gtxn_idx%5#0"
      ]
    },
    "566": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)",
        "tmp%125#0",
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%125#0",
        "tmp%127#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "567": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "tmp%125#0",
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%125#0",
        "tmp%127#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "569": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "tmp%125#0",
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%125#0",
        "tmp%127#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "axfer"
      ]
    },
    "570": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0",
        "tmp%125#0",
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%125#0",
        "tmp%127#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "571": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "tmp%125#0",
        "tmp%127#0",
        "gtxn_idx%5#0"
      ]
    },
    "572": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.buyout",
      "op": "callsub buyout",
      "stack_out": []
    },
    "575": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "576": {
      "op": "return",
      "stack_out": []
    },
    "577": {
      "block": "main_accrueLoanInterest_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "579": {
      "op": "!",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "580": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "581": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%116#0"
      ]
    },
    "583": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "584": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "587": {
      "op": "btoi",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "588": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%119#0"
      ],
      "stack_out": [
        "tmp%119#0"
      ]
    },
    "590": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.accrueLoanInterest",
      "op": "callsub accrueLoanInterest",
      "stack_out": []
    },
    "593": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "594": {
      "op": "return",
      "stack_out": []
    },
    "595": {
      "block": "main_withdrawFees_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "597": {
      "op": "!",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "598": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "599": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "601": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "602": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.withdrawFees",
      "op": "callsub withdrawFees"
    },
    "605": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "606": {
      "op": "return",
      "stack_out": []
    },
    "607": {
      "block": "main_repayLoan_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "609": {
      "op": "!",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "610": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "611": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "613": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "614": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "616": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0",
        "1"
      ]
    },
    "617": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "618": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "619": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "621": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "axfer"
      ]
    },
    "622": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "623": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%4#0"
      ]
    },
    "624": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[8]%18#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "reinterpret_bytes[8]%18#0"
      ]
    },
    "627": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%4#0",
        "tmp%109#0"
      ],
      "stack_out": [
        "gtxn_idx%4#0",
        "tmp%109#0"
      ]
    },
    "628": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.repayLoan",
      "op": "callsub repayLoan",
      "stack_out": []
    },
    "631": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "632": {
      "op": "return",
      "stack_out": []
    },
    "633": {
      "block": "main_getLoanRecordASAId_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "635": {
      "op": "!",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "636": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "637": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "639": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "640": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "643": {
      "op": "btoi",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "644": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "646": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getLoanRecordASAId",
      "op": "callsub getLoanRecordASAId",
      "defined_out": [
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0"
      ]
    },
    "649": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "val_as_bytes%6#0"
      ]
    },
    "650": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "val_as_bytes%6#0",
        "0x151f7c75"
      ]
    },
    "651": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%6#0"
      ]
    },
    "652": {
      "op": "concat",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "653": {
      "op": "log",
      "stack_out": []
    },
    "654": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "655": {
      "op": "return",
      "stack_out": []
    },
    "656": {
      "block": "main_getLoanRecord_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "658": {
      "op": "!",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "659": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "660": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "662": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "663": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "666": {
      "op": "btoi",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "667": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "669": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getLoanRecord",
      "op": "callsub getLoanRecord",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "672": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0",
        "0x151f7c75"
      ]
    },
    "673": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%95#0"
      ]
    },
    "674": {
      "op": "concat",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "675": {
      "op": "log",
      "stack_out": []
    },
    "676": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "677": {
      "op": "return",
      "stack_out": []
    },
    "678": {
      "block": "main_claimLoanRecordASA_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "680": {
      "op": "!",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "681": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "682": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "684": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "685": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "688": {
      "op": "btoi",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "689": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "691": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%2#0",
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0",
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "694": {
      "op": "btoi",
      "defined_out": [
        "tmp%86#0",
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%86#0",
        "tmp%87#0"
      ]
    },
    "695": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%86#0",
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%86#0",
        "tmp%88#0"
      ]
    },
    "697": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.claimLoanRecordASA",
      "op": "callsub claimLoanRecordASA",
      "stack_out": []
    },
    "700": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "701": {
      "op": "return",
      "stack_out": []
    },
    "702": {
      "block": "main_borrow_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "704": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "705": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "706": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "708": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "709": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "711": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0",
        "1"
      ]
    },
    "712": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "713": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "714": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "716": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "axfer"
      ]
    },
    "717": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "718": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "719": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[8]%15#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[8]%15#0"
      ]
    },
    "722": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%3#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "tmp%79#0"
      ]
    },
    "723": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[8]%16#0",
        "tmp%79#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "tmp%79#0",
        "reinterpret_bytes[8]%16#0"
      ]
    },
    "726": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%3#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "tmp%79#0",
        "tmp%80#0"
      ]
    },
    "727": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_bytes[8]%17#0",
        "tmp%79#0",
        "tmp%80#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "tmp%79#0",
        "tmp%80#0",
        "reinterpret_bytes[8]%17#0"
      ]
    },
    "730": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.borrow",
      "op": "callsub borrow",
      "stack_out": []
    },
    "733": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "734": {
      "op": "return",
      "stack_out": []
    },
    "735": {
      "block": "main_withdrawDeposit_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "737": {
      "op": "!",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "738": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "739": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "741": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "742": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "744": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "1"
      ]
    },
    "745": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "746": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "747": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "749": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "axfer"
      ]
    },
    "750": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "751": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%2#0"
      ]
    },
    "752": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%13#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%13#0"
      ]
    },
    "755": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%72#0"
      ]
    },
    "756": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%2#0",
        "reinterpret_bytes[8]%14#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%72#0",
        "reinterpret_bytes[8]%14#0"
      ]
    },
    "759": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%72#0",
        "tmp%73#0"
      ],
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%72#0",
        "tmp%73#0"
      ]
    },
    "760": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.withdrawDeposit",
      "op": "callsub withdrawDeposit",
      "stack_out": []
    },
    "763": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "764": {
      "op": "return",
      "stack_out": []
    },
    "765": {
      "block": "main_depositASA_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "767": {
      "op": "!",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "768": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "769": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "771": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "772": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "774": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "1"
      ]
    },
    "775": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "776": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "777": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "779": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "axfer"
      ]
    },
    "780": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "781": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "782": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%12#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%12#0"
      ]
    },
    "785": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%66#0"
      ]
    },
    "786": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.depositASA",
      "op": "callsub depositASA",
      "stack_out": []
    },
    "789": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "790": {
      "op": "return",
      "stack_out": []
    },
    "791": {
      "block": "main_addNewCollateralType_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "793": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "794": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "795": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "797": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "798": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%10#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "801": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%10#0",
        "reinterpret_bytes[8]%11#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%10#0",
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "804": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.addNewCollateralType",
      "op": "callsub addNewCollateralType",
      "stack_out": []
    },
    "807": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "808": {
      "op": "return",
      "stack_out": []
    },
    "809": {
      "block": "main_getPricesFromOracles_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "811": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "812": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "813": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "815": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "816": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "819": {
      "op": "btoi",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "820": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getPricesFromOracles",
      "op": "callsub getPricesFromOracles",
      "defined_out": [
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0"
      ]
    },
    "823": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0"
      ]
    },
    "824": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "0x151f7c75"
      ]
    },
    "825": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%5#0"
      ]
    },
    "826": {
      "op": "concat",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "827": {
      "op": "log",
      "stack_out": []
    },
    "828": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "829": {
      "op": "return",
      "stack_out": []
    },
    "830": {
      "block": "main_getOraclePrice_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "832": {
      "op": "!",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "833": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "834": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "836": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "837": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "840": {
      "op": "btoi",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "841": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%8#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "844": {
      "op": "btoi",
      "defined_out": [
        "tmp%48#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%48#0",
        "tmp%49#0"
      ]
    },
    "845": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getOraclePrice",
      "op": "callsub getOraclePrice",
      "defined_out": [
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0"
      ]
    },
    "848": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0"
      ]
    },
    "849": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "0x151f7c75"
      ]
    },
    "850": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ]
    },
    "851": {
      "op": "concat",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "852": {
      "op": "log",
      "stack_out": []
    },
    "853": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "854": {
      "op": "return",
      "stack_out": []
    },
    "855": {
      "block": "main_addOraclePool_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "857": {
      "op": "!",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "858": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "859": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "861": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "862": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "865": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[8]%6#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "868": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.addOraclePool",
      "op": "callsub addOraclePool",
      "stack_out": []
    },
    "871": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "872": {
      "op": "return",
      "stack_out": []
    },
    "873": {
      "block": "main_getAcceptedCollateralsCount_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "875": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "876": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "877": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "879": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "880": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getAcceptedCollateralsCount",
      "op": "callsub getAcceptedCollateralsCount",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "883": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0"
      ]
    },
    "884": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "0x151f7c75"
      ]
    },
    "885": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%3#0"
      ]
    },
    "886": {
      "op": "concat",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "887": {
      "op": "log",
      "stack_out": []
    },
    "888": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "889": {
      "op": "return",
      "stack_out": []
    },
    "890": {
      "block": "main_getOraclePoolsCount_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "892": {
      "op": "!",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "893": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "894": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "896": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "897": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getOraclePoolsCount",
      "op": "callsub getOraclePoolsCount",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "900": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "901": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "902": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "903": {
      "op": "concat",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "904": {
      "op": "log",
      "stack_out": []
    },
    "905": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "906": {
      "op": "return",
      "stack_out": []
    },
    "907": {
      "block": "main_getTotalDeposits_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "909": {
      "op": "!",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "910": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "911": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "913": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "914": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getTotalDeposits",
      "op": "callsub getTotalDeposits",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "917": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "918": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "919": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "920": {
      "op": "concat",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "921": {
      "op": "log",
      "stack_out": []
    },
    "922": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "923": {
      "op": "return",
      "stack_out": []
    },
    "924": {
      "block": "main_getCirculatingLST_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "926": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "927": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "928": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "930": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "931": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getCirculatingLST",
      "op": "callsub getCirculatingLST",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "934": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "935": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "936": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "937": {
      "op": "concat",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "938": {
      "op": "log",
      "stack_out": []
    },
    "939": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "940": {
      "op": "return",
      "stack_out": []
    },
    "941": {
      "block": "main_initApplication_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "943": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "944": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "945": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "947": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "948": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "950": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "1"
      ]
    },
    "951": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "952": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "953": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "955": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "956": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "957": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "958": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "961": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0"
      ]
    },
    "962": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "965": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "966": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%3#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "969": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "970": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%4#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "973": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "974": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_bytes[8]%5#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "977": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "978": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.initApplication",
      "op": "callsub initApplication",
      "stack_out": []
    },
    "981": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "982": {
      "op": "return",
      "stack_out": []
    },
    "983": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "985": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "986": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "987": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "989": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "990": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "991": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "994": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "995": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "997": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "1000": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "1001": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "1004": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1005": {
      "op": "return",
      "stack_out": []
    },
    "1006": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.createApplication",
      "params": {
        "admin#0": "bytes",
        "baseTokenId#0": "uint64"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1009": {
      "op": "bytec 6 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\""
      ],
      "stack_out": [
        "\"admin_account\""
      ]
    },
    "1011": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"admin_account\"",
        "admin#0 (copy)"
      ],
      "stack_out": [
        "\"admin_account\"",
        "admin#0 (copy)"
      ]
    },
    "1013": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1014": {
      "op": "frame_dig -1",
      "defined_out": [
        "baseTokenId#0 (copy)"
      ],
      "stack_out": [
        "baseTokenId#0 (copy)"
      ]
    },
    "1016": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1017": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"base_token_id\""
      ]
    },
    "1018": {
      "op": "swap",
      "stack_out": [
        "\"base_token_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "1019": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1020": {
      "retsub": true,
      "op": "retsub"
    },
    "1021": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.initApplication",
      "params": {
        "mbrTxn#0": "uint64",
        "ltv_bps#0": "uint64",
        "liq_threshold_bps#0": "uint64",
        "interest_bps#0": "uint64",
        "origination_fee_bps#0": "uint64",
        "protocol_interest_fee_bps#0": "uint64"
      },
      "block": "initApplication",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "1024": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1026": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1027": {
      "op": "bytec 6 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1029": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1030": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1031": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1032": {
      "op": "assert",
      "stack_out": []
    },
    "1033": {
      "op": "frame_dig -6",
      "defined_out": [
        "mbrTxn#0 (copy)"
      ],
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1035": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1037": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1038": {
      "op": "bytec 6 // \"admin_account\"",
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1040": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1041": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "1042": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1043": {
      "op": "bz initApplication_bool_false@3",
      "stack_out": []
    },
    "1046": {
      "op": "frame_dig -6",
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "1048": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1050": {
      "op": "pushint 34000 // 34000",
      "defined_out": [
        "34000",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "34000"
      ]
    },
    "1054": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1055": {
      "op": "bz initApplication_bool_false@3",
      "stack_out": []
    },
    "1058": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1059": {
      "block": "initApplication_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "1060": {
      "op": "bytec 16 // \"ltv_bps\"",
      "defined_out": [
        "\"ltv_bps\""
      ],
      "stack_out": [
        "\"ltv_bps\""
      ]
    },
    "1062": {
      "op": "frame_dig -5",
      "defined_out": [
        "\"ltv_bps\"",
        "ltv_bps#0 (copy)"
      ],
      "stack_out": [
        "\"ltv_bps\"",
        "ltv_bps#0 (copy)"
      ]
    },
    "1064": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1065": {
      "op": "bytec 14 // \"liq_threshold_bps\"",
      "defined_out": [
        "\"liq_threshold_bps\""
      ],
      "stack_out": [
        "\"liq_threshold_bps\""
      ]
    },
    "1067": {
      "op": "frame_dig -4",
      "defined_out": [
        "\"liq_threshold_bps\"",
        "liq_threshold_bps#0 (copy)"
      ],
      "stack_out": [
        "\"liq_threshold_bps\"",
        "liq_threshold_bps#0 (copy)"
      ]
    },
    "1069": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1070": {
      "op": "bytec 17 // \"interest_bps\"",
      "defined_out": [
        "\"interest_bps\""
      ],
      "stack_out": [
        "\"interest_bps\""
      ]
    },
    "1072": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"interest_bps\"",
        "interest_bps#0 (copy)"
      ],
      "stack_out": [
        "\"interest_bps\"",
        "interest_bps#0 (copy)"
      ]
    },
    "1074": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1075": {
      "op": "bytec 18 // \"origination_fee_bps\"",
      "defined_out": [
        "\"origination_fee_bps\""
      ],
      "stack_out": [
        "\"origination_fee_bps\""
      ]
    },
    "1077": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"origination_fee_bps\"",
        "origination_fee_bps#0 (copy)"
      ],
      "stack_out": [
        "\"origination_fee_bps\"",
        "origination_fee_bps#0 (copy)"
      ]
    },
    "1079": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1080": {
      "op": "bytec 9 // \"oracle_pools_count\"",
      "defined_out": [
        "\"oracle_pools_count\""
      ],
      "stack_out": [
        "\"oracle_pools_count\""
      ]
    },
    "1082": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"oracle_pools_count\"",
        "0"
      ],
      "stack_out": [
        "\"oracle_pools_count\"",
        "0"
      ]
    },
    "1083": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1084": {
      "op": "bytec 5 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\""
      ],
      "stack_out": [
        "\"accepted_collaterals_count\""
      ]
    },
    "1086": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ]
    },
    "1087": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1088": {
      "op": "bytec 7 // \"fee_pool\"",
      "defined_out": [
        "\"fee_pool\""
      ],
      "stack_out": [
        "\"fee_pool\""
      ]
    },
    "1090": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"fee_pool\"",
        "0"
      ]
    },
    "1091": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1092": {
      "op": "bytec 8 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\""
      ],
      "stack_out": [
        "\"circulating_lst\""
      ]
    },
    "1094": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"circulating_lst\"",
        "0"
      ]
    },
    "1095": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1096": {
      "op": "bytec_3 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\""
      ],
      "stack_out": [
        "\"total_deposits\""
      ]
    },
    "1097": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_deposits\"",
        "0"
      ]
    },
    "1098": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1099": {
      "op": "bytec 4 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\""
      ],
      "stack_out": [
        "\"active_loan_records\""
      ]
    },
    "1101": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"active_loan_records\"",
        "0"
      ]
    },
    "1102": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1103": {
      "op": "bytec 19 // \"protocol_interest_fee_bps\"",
      "defined_out": [
        "\"protocol_interest_fee_bps\""
      ],
      "stack_out": [
        "\"protocol_interest_fee_bps\""
      ]
    },
    "1105": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"protocol_interest_fee_bps\"",
        "protocol_interest_fee_bps#0 (copy)"
      ],
      "stack_out": [
        "\"protocol_interest_fee_bps\"",
        "protocol_interest_fee_bps#0 (copy)"
      ]
    },
    "1107": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1108": {
      "op": "itxn_begin"
    },
    "1109": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1111": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "1112": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "1113": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1114": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0"
      ]
    },
    "1115": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1116": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0"
      ]
    },
    "1117": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1119": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1121": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "1123": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "1124": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1126": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1127": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1129": {
      "op": "itxn_submit"
    },
    "1130": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1131": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "1132": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1133": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "1134": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1135": {
      "op": "itxn_begin"
    },
    "1136": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "1138": {
      "op": "dig 1",
      "defined_out": [
        "baseToken#0",
        "baseToken#0 (copy)",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "baseToken#0 (copy)"
      ]
    },
    "1140": {
      "op": "asset_params_get AssetTotal",
      "defined_out": [
        "baseToken#0",
        "check%0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "1142": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0"
      ]
    },
    "1143": {
      "op": "dig 2",
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "baseToken#0 (copy)"
      ]
    },
    "1145": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "baseToken#0",
        "check%1#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "1147": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ]
    },
    "1148": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1150": {
      "op": "uncover 4",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "baseToken#0"
      ]
    },
    "1152": {
      "op": "asset_params_get AssetUnitName",
      "defined_out": [
        "check%2#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "1154": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "value%2#0"
      ]
    },
    "1155": {
      "op": "pushbytes \"c\"",
      "defined_out": [
        "\"c\"",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "value%2#0",
        "\"c\""
      ]
    },
    "1158": {
      "op": "swap",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "\"c\"",
        "value%2#0"
      ]
    },
    "1159": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "1160": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0",
        "0"
      ]
    },
    "1161": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "1162": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1163": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0",
        "maybe_value%4#0"
      ]
    },
    "1164": {
      "op": "pushbytes \"c\"",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0",
        "maybe_value%4#0",
        "\"c\""
      ]
    },
    "1167": {
      "op": "swap",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0",
        "\"c\"",
        "maybe_value%4#0"
      ]
    },
    "1168": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetName_idx_0#0"
      ]
    },
    "1169": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%1%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "1171": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "inner_txn_params%1%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1173": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ]
    },
    "1175": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0",
        "0"
      ]
    },
    "1176": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0",
        "value%1#0"
      ]
    },
    "1178": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "value%0#0"
      ]
    },
    "1180": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "1182": {
      "op": "itxn_field Sender",
      "stack_out": []
    },
    "1184": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "1186": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1188": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1189": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1191": {
      "op": "itxn_submit"
    },
    "1192": {
      "op": "itxn ConfigAsset",
      "defined_out": [
        "result.ConfigAsset#0"
      ],
      "stack_out": [
        "result.ConfigAsset#0"
      ]
    },
    "1194": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1195": {
      "op": "bytec 20 // \"lst_token_id\"",
      "defined_out": [
        "\"lst_token_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"lst_token_id\""
      ]
    },
    "1197": {
      "op": "swap",
      "stack_out": [
        "\"lst_token_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "1198": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1199": {
      "retsub": true,
      "op": "retsub"
    },
    "1200": {
      "block": "initApplication_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "1201": {
      "op": "b initApplication_bool_merge@4"
    },
    "1204": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getCirculatingLST",
      "params": {},
      "block": "getCirculatingLST",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1205": {
      "op": "bytec 8 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"circulating_lst\""
      ]
    },
    "1207": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1208": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1209": {
      "retsub": true,
      "op": "retsub"
    },
    "1210": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getTotalDeposits",
      "params": {},
      "block": "getTotalDeposits",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1211": {
      "op": "bytec_3 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_deposits\""
      ]
    },
    "1212": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1213": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1214": {
      "retsub": true,
      "op": "retsub"
    },
    "1215": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getOraclePoolsCount",
      "params": {},
      "block": "getOraclePoolsCount",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1216": {
      "op": "bytec 9 // \"oracle_pools_count\"",
      "defined_out": [
        "\"oracle_pools_count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"oracle_pools_count\""
      ]
    },
    "1218": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1219": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1220": {
      "retsub": true,
      "op": "retsub"
    },
    "1221": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getAcceptedCollateralsCount",
      "params": {},
      "block": "getAcceptedCollateralsCount",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1222": {
      "op": "bytec 5 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1224": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1225": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1226": {
      "retsub": true,
      "op": "retsub"
    },
    "1227": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.addOraclePool",
      "params": {
        "poolAddress#0": "bytes",
        "contractAppId#0": "bytes"
      },
      "block": "addOraclePool",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1230": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1232": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1233": {
      "op": "bytec 6 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1235": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1236": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1237": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1238": {
      "op": "assert",
      "stack_out": []
    },
    "1239": {
      "op": "frame_dig -1",
      "defined_out": [
        "contractAppId#0 (copy)"
      ],
      "stack_out": [
        "contractAppId#0 (copy)"
      ]
    },
    "1241": {
      "op": "btoi",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1242": {
      "op": "frame_dig -2",
      "defined_out": [
        "poolAddress#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "poolAddress#0 (copy)"
      ]
    },
    "1244": {
      "op": "dig 1",
      "defined_out": [
        "poolAddress#0 (copy)",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "poolAddress#0 (copy)",
        "tmp%2#0 (copy)"
      ]
    },
    "1246": {
      "op": "bytec 21 // \"asset_1_cumulative_price\"",
      "defined_out": [
        "\"asset_1_cumulative_price\"",
        "poolAddress#0 (copy)",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "poolAddress#0 (copy)",
        "tmp%2#0 (copy)",
        "\"asset_1_cumulative_price\""
      ]
    },
    "1248": {
      "op": "app_local_get_ex",
      "defined_out": [
        "tmp%2#0",
        "token_1_cumulative_price#0",
        "token_1_cumulative_price_exists#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "token_1_cumulative_price#0",
        "token_1_cumulative_price_exists#0"
      ]
    },
    "1249": {
      "op": "pop",
      "stack_out": [
        "tmp%2#0",
        "token_1_cumulative_price#0"
      ]
    },
    "1250": {
      "op": "swap",
      "stack_out": [
        "token_1_cumulative_price#0",
        "tmp%2#0"
      ]
    },
    "1251": {
      "op": "frame_dig -2",
      "stack_out": [
        "token_1_cumulative_price#0",
        "tmp%2#0",
        "poolAddress#0 (copy)"
      ]
    },
    "1253": {
      "op": "dig 1",
      "stack_out": [
        "token_1_cumulative_price#0",
        "tmp%2#0",
        "poolAddress#0 (copy)",
        "tmp%2#0 (copy)"
      ]
    },
    "1255": {
      "op": "bytec 22 // \"asset_2_cumulative_price\"",
      "defined_out": [
        "\"asset_2_cumulative_price\"",
        "poolAddress#0 (copy)",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "token_1_cumulative_price#0"
      ],
      "stack_out": [
        "token_1_cumulative_price#0",
        "tmp%2#0",
        "poolAddress#0 (copy)",
        "tmp%2#0 (copy)",
        "\"asset_2_cumulative_price\""
      ]
    },
    "1257": {
      "op": "app_local_get_ex",
      "defined_out": [
        "tmp%2#0",
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "token_2_cumulative_price_exists#0"
      ],
      "stack_out": [
        "token_1_cumulative_price#0",
        "tmp%2#0",
        "token_2_cumulative_price#0",
        "token_2_cumulative_price_exists#0"
      ]
    },
    "1258": {
      "op": "pop",
      "stack_out": [
        "token_1_cumulative_price#0",
        "tmp%2#0",
        "token_2_cumulative_price#0"
      ]
    },
    "1259": {
      "op": "swap",
      "stack_out": [
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "tmp%2#0"
      ]
    },
    "1260": {
      "op": "frame_dig -2",
      "stack_out": [
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "tmp%2#0",
        "poolAddress#0 (copy)"
      ]
    },
    "1262": {
      "op": "swap",
      "stack_out": [
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "poolAddress#0 (copy)",
        "tmp%2#0"
      ]
    },
    "1263": {
      "op": "bytec 23 // \"cumulative_price_update_timestamp\"",
      "defined_out": [
        "\"cumulative_price_update_timestamp\"",
        "poolAddress#0 (copy)",
        "tmp%2#0",
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0"
      ],
      "stack_out": [
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "poolAddress#0 (copy)",
        "tmp%2#0",
        "\"cumulative_price_update_timestamp\""
      ]
    },
    "1265": {
      "op": "app_local_get_ex",
      "defined_out": [
        "cumulativePriceLastTimestamp#0",
        "cumulativePriceLastTimestampExists#0",
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0"
      ],
      "stack_out": [
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "cumulativePriceLastTimestamp#0",
        "cumulativePriceLastTimestampExists#0"
      ]
    },
    "1266": {
      "op": "pop",
      "stack_out": [
        "token_1_cumulative_price#0",
        "token_2_cumulative_price#0",
        "cumulativePriceLastTimestamp#0"
      ]
    },
    "1267": {
      "op": "uncover 2",
      "stack_out": [
        "token_2_cumulative_price#0",
        "cumulativePriceLastTimestamp#0",
        "token_1_cumulative_price#0"
      ]
    },
    "1269": {
      "op": "itob",
      "defined_out": [
        "cumulativePriceLastTimestamp#0",
        "token_2_cumulative_price#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "token_2_cumulative_price#0",
        "cumulativePriceLastTimestamp#0",
        "val_as_bytes%0#0"
      ]
    },
    "1270": {
      "op": "uncover 2",
      "stack_out": [
        "cumulativePriceLastTimestamp#0",
        "val_as_bytes%0#0",
        "token_2_cumulative_price#0"
      ]
    },
    "1272": {
      "op": "itob",
      "defined_out": [
        "cumulativePriceLastTimestamp#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "cumulativePriceLastTimestamp#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1273": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "cumulativePriceLastTimestamp#0"
      ]
    },
    "1275": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "1276": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "poolAddress#0 (copy)"
      ]
    },
    "1278": {
      "op": "frame_dig -1",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "poolAddress#0 (copy)",
        "contractAppId#0 (copy)"
      ]
    },
    "1280": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1281": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%0#0"
      ]
    },
    "1283": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1284": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%1#0"
      ]
    },
    "1286": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "1287": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%2#0"
      ]
    },
    "1288": {
      "op": "concat",
      "defined_out": [
        "newOracle#0"
      ],
      "stack_out": [
        "newOracle#0"
      ]
    },
    "1289": {
      "op": "intc_0 // 0",
      "stack_out": [
        "newOracle#0",
        "0"
      ]
    },
    "1290": {
      "op": "bytec 9 // \"oracle_pools_count\"",
      "defined_out": [
        "\"oracle_pools_count\"",
        "0",
        "newOracle#0"
      ],
      "stack_out": [
        "newOracle#0",
        "0",
        "\"oracle_pools_count\""
      ]
    },
    "1292": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "newOracle#0"
      ],
      "stack_out": [
        "newOracle#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1293": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "newOracle#0",
        "maybe_value%1#0"
      ]
    },
    "1294": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%1#0",
        "newOracle#0"
      ],
      "stack_out": [
        "newOracle#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "1295": {
      "op": "+",
      "defined_out": [
        "newOracle#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "newOracle#0",
        "to_encode%0#0"
      ]
    },
    "1296": {
      "op": "itob",
      "defined_out": [
        "newOracle#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "newOracle#0",
        "val_as_bytes%3#0"
      ]
    },
    "1297": {
      "op": "bytec 15 // \"oracle_pool\"",
      "defined_out": [
        "\"oracle_pool\"",
        "newOracle#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "newOracle#0",
        "val_as_bytes%3#0",
        "\"oracle_pool\""
      ]
    },
    "1299": {
      "op": "swap",
      "stack_out": [
        "newOracle#0",
        "\"oracle_pool\"",
        "val_as_bytes%3#0"
      ]
    },
    "1300": {
      "op": "concat",
      "defined_out": [
        "newOracle#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "newOracle#0",
        "tmp%5#0"
      ]
    },
    "1301": {
      "op": "swap",
      "stack_out": [
        "tmp%5#0",
        "newOracle#0"
      ]
    },
    "1302": {
      "op": "box_put",
      "stack_out": []
    },
    "1303": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1304": {
      "op": "bytec 9 // \"oracle_pools_count\"",
      "stack_out": [
        "0",
        "\"oracle_pools_count\""
      ]
    },
    "1306": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1307": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1308": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%2#0",
        "1"
      ]
    },
    "1309": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "1310": {
      "op": "bytec 9 // \"oracle_pools_count\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"oracle_pools_count\""
      ]
    },
    "1312": {
      "op": "swap",
      "stack_out": [
        "\"oracle_pools_count\"",
        "new_state_value%0#0"
      ]
    },
    "1313": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1314": {
      "retsub": true,
      "op": "retsub"
    },
    "1315": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getOraclePrice",
      "params": {
        "tokenId#0": "uint64",
        "oracleIndex#0": "uint64"
      },
      "block": "getOraclePrice",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1318": {
      "op": "frame_dig -1",
      "defined_out": [
        "oracleIndex#0 (copy)"
      ],
      "stack_out": [
        "oracleIndex#0 (copy)"
      ]
    },
    "1320": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1321": {
      "op": "bytec 15 // \"oracle_pool\"",
      "defined_out": [
        "\"oracle_pool\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"oracle_pool\""
      ]
    },
    "1323": {
      "op": "swap",
      "stack_out": [
        "\"oracle_pool\"",
        "val_as_bytes%0#0"
      ]
    },
    "1324": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1325": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "maybe_exists%0#0"
      ]
    },
    "1326": {
      "op": "swap",
      "stack_out": [
        "maybe_exists%0#0",
        "oracle#0"
      ]
    },
    "1327": {
      "op": "dup",
      "stack_out": [
        "maybe_exists%0#0",
        "oracle#0",
        "oracle#0 (copy)"
      ]
    },
    "1328": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_exists%0#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "oracle#0",
        "maybe_exists%0#0"
      ]
    },
    "1330": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "oracle#0",
        "oracle#0"
      ]
    },
    "1331": {
      "op": "dup",
      "defined_out": [
        "oracle#0",
        "oracle#0 (copy)"
      ],
      "stack_out": [
        "oracle#0",
        "oracle#0",
        "oracle#0 (copy)"
      ]
    },
    "1332": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "address#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "oracle#0",
        "address#0"
      ]
    },
    "1335": {
      "op": "dup",
      "stack_out": [
        "oracle#0",
        "oracle#0",
        "address#0",
        "address#0 (copy)"
      ]
    },
    "1336": {
      "op": "uncover 2",
      "defined_out": [
        "address#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "address#0",
        "oracle#0"
      ]
    },
    "1338": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "address#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "address#0",
        "oracle#0",
        "32"
      ]
    },
    "1340": {
      "op": "extract_uint64",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "address#0",
        "contractAppIdObj#0"
      ]
    },
    "1341": {
      "op": "dup",
      "stack_out": [
        "oracle#0",
        "address#0",
        "address#0",
        "contractAppIdObj#0",
        "contractAppIdObj#0"
      ]
    },
    "1342": {
      "op": "cover 2",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0",
        "contractAppIdObj#0"
      ]
    },
    "1344": {
      "op": "dup2",
      "defined_out": [
        "address#0",
        "address#0 (copy)",
        "contractAppIdObj#0",
        "contractAppIdObj#0 (copy)",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0 (copy)",
        "contractAppIdObj#0 (copy)"
      ]
    },
    "1345": {
      "op": "pushbytes \"asset_1_id\"",
      "defined_out": [
        "\"asset_1_id\"",
        "address#0",
        "address#0 (copy)",
        "contractAppIdObj#0",
        "contractAppIdObj#0 (copy)",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0 (copy)",
        "contractAppIdObj#0 (copy)",
        "\"asset_1_id\""
      ]
    },
    "1357": {
      "op": "app_local_get_ex",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "oracle#0",
        "token_1_exists#0",
        "token_1_id#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0",
        "contractAppIdObj#0",
        "token_1_id#0",
        "token_1_exists#0"
      ]
    },
    "1358": {
      "op": "pop",
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "address#0",
        "contractAppIdObj#0",
        "token_1_id#0"
      ]
    },
    "1359": {
      "op": "cover 2",
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "token_1_id#0",
        "address#0",
        "contractAppIdObj#0"
      ]
    },
    "1361": {
      "op": "bytec 23 // \"cumulative_price_update_timestamp\"",
      "defined_out": [
        "\"cumulative_price_update_timestamp\"",
        "address#0",
        "contractAppIdObj#0",
        "oracle#0",
        "token_1_id#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "token_1_id#0",
        "address#0",
        "contractAppIdObj#0",
        "\"cumulative_price_update_timestamp\""
      ]
    },
    "1363": {
      "op": "app_local_get_ex",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "new_cumulative_timestamp#0",
        "new_cumulative_timestamp_exists#0",
        "oracle#0",
        "token_1_id#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "token_1_id#0",
        "new_cumulative_timestamp#0",
        "new_cumulative_timestamp_exists#0"
      ]
    },
    "1364": {
      "op": "pop",
      "stack_out": [
        "oracle#0",
        "address#0",
        "contractAppIdObj#0",
        "token_1_id#0",
        "new_cumulative_timestamp#0"
      ]
    },
    "1365": {
      "op": "cover 2",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "new_cumulative_timestamp#0",
        "oracle#0",
        "token_1_id#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0",
        "token_1_id#0"
      ]
    },
    "1367": {
      "op": "frame_dig -2",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "new_cumulative_timestamp#0",
        "oracle#0",
        "tokenId#0 (copy)",
        "token_1_id#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0",
        "token_1_id#0",
        "tokenId#0 (copy)"
      ]
    },
    "1369": {
      "op": "==",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0",
        "new_cumulative_timestamp#0",
        "oracle#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0",
        "tmp%1#0"
      ]
    },
    "1370": {
      "op": "bz getOraclePrice_else_body@2",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0"
      ]
    },
    "1373": {
      "op": "frame_dig 1",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0",
        "address#0"
      ]
    },
    "1375": {
      "op": "swap",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "address#0",
        "contractAppIdObj#0"
      ]
    },
    "1376": {
      "op": "bytec 21 // \"asset_1_cumulative_price\"",
      "defined_out": [
        "\"asset_1_cumulative_price\"",
        "address#0",
        "contractAppIdObj#0",
        "new_cumulative_timestamp#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "address#0",
        "contractAppIdObj#0",
        "\"asset_1_cumulative_price\""
      ]
    },
    "1378": {
      "op": "app_local_get_ex",
      "defined_out": [
        "address#0",
        "new_cumulative_timestamp#0",
        "oracle#0",
        "price#0",
        "priceExists#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "price#0",
        "priceExists#0"
      ]
    },
    "1379": {
      "op": "pop",
      "defined_out": [
        "address#0",
        "newCummulativePrice#3",
        "new_cumulative_timestamp#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3"
      ]
    },
    "1380": {
      "block": "getOraclePrice_after_if_else@3",
      "stack_in": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0"
      ]
    },
    "1382": {
      "op": "dup",
      "defined_out": [
        "oracle#0",
        "oracle#0 (copy)"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0",
        "oracle#0 (copy)"
      ]
    },
    "1383": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "oracle#0",
        "oracle#0 (copy)"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0",
        "oracle#0 (copy)",
        "56"
      ]
    },
    "1385": {
      "op": "extract_uint64",
      "defined_out": [
        "oracle#0",
        "previousTimestamp#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0",
        "previousTimestamp#0"
      ]
    },
    "1386": {
      "op": "frame_dig 2",
      "defined_out": [
        "new_cumulative_timestamp#0",
        "oracle#0",
        "previousTimestamp#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0",
        "previousTimestamp#0",
        "new_cumulative_timestamp#0"
      ]
    },
    "1388": {
      "op": "swap",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0",
        "new_cumulative_timestamp#0",
        "previousTimestamp#0"
      ]
    },
    "1389": {
      "op": "-",
      "defined_out": [
        "deltaTime#0",
        "new_cumulative_timestamp#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "oracle#0",
        "deltaTime#0"
      ]
    },
    "1390": {
      "op": "swap",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "deltaTime#0",
        "oracle#0"
      ]
    },
    "1391": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "deltaTime#0",
        "new_cumulative_timestamp#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "deltaTime#0",
        "oracle#0",
        "40"
      ]
    },
    "1393": {
      "op": "extract_uint64",
      "defined_out": [
        "deltaTime#0",
        "new_cumulative_timestamp#0",
        "oracle#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3",
        "deltaTime#0",
        "tmp%4#0"
      ]
    },
    "1394": {
      "op": "uncover 2",
      "defined_out": [
        "deltaTime#0",
        "newCummulativePrice#3",
        "new_cumulative_timestamp#0",
        "oracle#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "deltaTime#0",
        "tmp%4#0",
        "newCummulativePrice#3"
      ]
    },
    "1396": {
      "op": "swap",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "deltaTime#0",
        "newCummulativePrice#3",
        "tmp%4#0"
      ]
    },
    "1397": {
      "op": "-",
      "defined_out": [
        "deltaPrice#0",
        "deltaTime#0",
        "new_cumulative_timestamp#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "deltaTime#0",
        "deltaPrice#0"
      ]
    },
    "1398": {
      "op": "swap",
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "deltaPrice#0",
        "deltaTime#0"
      ]
    },
    "1399": {
      "op": "/",
      "defined_out": [
        "instantaneous_price#0",
        "new_cumulative_timestamp#0",
        "oracle#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "instantaneous_price#0"
      ]
    },
    "1400": {
      "op": "frame_bury 0"
    },
    "1402": {
      "retsub": true,
      "op": "retsub"
    },
    "1403": {
      "block": "getOraclePrice_else_body@2",
      "stack_in": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "address#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "contractAppIdObj#0",
        "address#0"
      ]
    },
    "1405": {
      "op": "swap",
      "defined_out": [
        "address#0",
        "contractAppIdObj#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "address#0",
        "contractAppIdObj#0"
      ]
    },
    "1406": {
      "op": "bytec 22 // \"asset_2_cumulative_price\"",
      "defined_out": [
        "\"asset_2_cumulative_price\"",
        "address#0",
        "contractAppIdObj#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "address#0",
        "contractAppIdObj#0",
        "\"asset_2_cumulative_price\""
      ]
    },
    "1408": {
      "op": "app_local_get_ex",
      "defined_out": [
        "address#0",
        "priceExists\u2081#0",
        "price\u2081#0"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "price\u2081#0",
        "priceExists\u2081#0"
      ]
    },
    "1409": {
      "op": "pop",
      "defined_out": [
        "address#0",
        "newCummulativePrice#3"
      ],
      "stack_out": [
        "oracle#0",
        "address#0",
        "new_cumulative_timestamp#0",
        "newCummulativePrice#3"
      ]
    },
    "1410": {
      "op": "b getOraclePrice_after_if_else@3"
    },
    "1413": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getPricesFromOracles",
      "params": {
        "tokenId#0": "uint64"
      },
      "block": "getPricesFromOracles",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1416": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1417": {
      "op": "bytec 9 // \"oracle_pools_count\"",
      "defined_out": [
        "\"oracle_pools_count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"oracle_pools_count\""
      ]
    },
    "1419": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "oracleIndex#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "maybe_exists%0#0"
      ]
    },
    "1420": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "oracleIndex#0"
      ]
    },
    "1421": {
      "op": "intc_0 // 0"
    },
    "1422": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0"
      ]
    },
    "1423": {
      "block": "getPricesFromOracles_while_top@1",
      "stack_in": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0"
      ]
    },
    "1425": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "oracleIndex#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "oracleIndex#0"
      ]
    },
    "1427": {
      "op": "<",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "1428": {
      "op": "bz getPricesFromOracles_after_while@3",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0"
      ]
    },
    "1431": {
      "op": "frame_dig 2",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0"
      ]
    },
    "1433": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "oracleIndex#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1434": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "1435": {
      "op": "bytec 15 // \"oracle_pool\"",
      "defined_out": [
        "\"oracle_pool\"",
        "i#0",
        "oracleIndex#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "val_as_bytes%0#0",
        "\"oracle_pool\""
      ]
    },
    "1437": {
      "op": "swap",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "\"oracle_pool\"",
        "val_as_bytes%0#0"
      ]
    },
    "1438": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1439": {
      "op": "box_get",
      "defined_out": [
        "i#0",
        "maybe_exists%1#0",
        "oracle#0",
        "oracleIndex#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "oracle#0",
        "maybe_exists%1#0"
      ]
    },
    "1440": {
      "op": "bury 1",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "maybe_exists%1#0"
      ]
    },
    "1442": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0"
      ]
    },
    "1443": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "tokenId#0 (copy)"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "tokenId#0 (copy)"
      ]
    },
    "1445": {
      "op": "dig 1",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "tokenId#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "1447": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getOraclePrice",
      "op": "callsub getOraclePrice",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "price#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "price#0"
      ]
    },
    "1450": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "price#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "price#0",
        "totalPrice#0"
      ]
    },
    "1452": {
      "op": "+",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "totalPrice#0"
      ]
    },
    "1453": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "oracleIndex#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0"
      ]
    },
    "1455": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "oracleIndex#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1456": {
      "op": "+",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "i#0"
      ]
    },
    "1457": {
      "op": "frame_bury 2",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0"
      ]
    },
    "1459": {
      "op": "b getPricesFromOracles_while_top@1"
    },
    "1462": {
      "block": "getPricesFromOracles_after_while@3",
      "stack_in": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "oracleIndex#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "oracleIndex#0"
      ]
    },
    "1464": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "oracleIndex#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "oracleIndex#0",
        "1"
      ]
    },
    "1465": {
      "op": "+",
      "defined_out": [
        "oracleIndex#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1466": {
      "op": "frame_dig 1",
      "defined_out": [
        "oracleIndex#0",
        "tmp%2#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "tmp%2#0",
        "totalPrice#0"
      ]
    },
    "1468": {
      "op": "swap",
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "totalPrice#0",
        "tmp%2#0"
      ]
    },
    "1469": {
      "op": "/",
      "defined_out": [
        "oracleIndex#0",
        "tmp%3#0",
        "totalPrice#0"
      ],
      "stack_out": [
        "oracleIndex#0",
        "totalPrice#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1470": {
      "op": "frame_bury 0"
    },
    "1472": {
      "retsub": true,
      "op": "retsub"
    },
    "1473": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.collateralExists",
      "params": {
        "collateralTokenId#0": "bytes"
      },
      "block": "collateralExists",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1476": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "1477": {
      "block": "collateralExists_while_top@1",
      "stack_in": [
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#0",
        "0"
      ]
    },
    "1478": {
      "op": "bytec 5 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ],
      "stack_out": [
        "i#0",
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1480": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1481": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "1482": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "i#0",
        "maybe_value%0#0",
        "i#0"
      ]
    },
    "1484": {
      "op": ">",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%0#0"
      ]
    },
    "1485": {
      "op": "bz collateralExists_after_while@5",
      "stack_out": [
        "i#0"
      ]
    },
    "1488": {
      "op": "frame_dig 0",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1490": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "1491": {
      "op": "bytec 11 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "i#0",
        "val_as_bytes%0#0",
        "\"accepted_collaterals\""
      ]
    },
    "1493": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "\"accepted_collaterals\"",
        "val_as_bytes%0#0"
      ]
    },
    "1494": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%1#0"
      ]
    },
    "1495": {
      "op": "box_get",
      "defined_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "i#0",
        "collateral#0",
        "maybe_exists%1#0"
      ]
    },
    "1496": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "i#0",
        "collateral#0"
      ]
    },
    "1497": {
      "op": "intc_0 // 0",
      "stack_out": [
        "i#0",
        "collateral#0",
        "0"
      ]
    },
    "1498": {
      "op": "extract_uint64",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%3#0"
      ]
    },
    "1499": {
      "op": "frame_dig -1",
      "defined_out": [
        "collateralTokenId#0 (copy)",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%3#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1501": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1502": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "i#0",
        "tmp%5#0"
      ]
    },
    "1503": {
      "op": "bz collateralExists_after_if_else@4",
      "stack_out": [
        "i#0"
      ]
    },
    "1506": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "1"
      ]
    },
    "1507": {
      "op": "swap"
    },
    "1508": {
      "retsub": true,
      "op": "retsub"
    },
    "1509": {
      "block": "collateralExists_after_if_else@4",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1511": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1512": {
      "op": "+",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1513": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "1515": {
      "op": "b collateralExists_while_top@1"
    },
    "1518": {
      "block": "collateralExists_after_while@5",
      "stack_in": [
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "i#0",
        "0"
      ]
    },
    "1519": {
      "op": "swap"
    },
    "1520": {
      "retsub": true,
      "op": "retsub"
    },
    "1521": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getCollateral",
      "params": {
        "collateralTokenId#0": "bytes"
      },
      "block": "getCollateral",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1524": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateral#0"
      ]
    },
    "1525": {
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0"
      ]
    },
    "1526": {
      "block": "getCollateral_while_top@1",
      "stack_in": [
        "collateral#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "0"
      ]
    },
    "1527": {
      "op": "bytec 5 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1529": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1530": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateral#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "1531": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "maybe_value%0#0",
        "i#0"
      ]
    },
    "1533": {
      "op": "dup"
    },
    "1534": {
      "op": "uncover 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%0#0"
      ]
    },
    "1536": {
      "op": "<",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "1537": {
      "error": "Collateral not found",
      "op": "assert // Collateral not found",
      "stack_out": [
        "collateral#0",
        "i#0",
        "i#0"
      ]
    },
    "1538": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "1539": {
      "op": "bytec 11 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "val_as_bytes%0#0",
        "\"accepted_collaterals\""
      ]
    },
    "1541": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "i#0",
        "\"accepted_collaterals\"",
        "val_as_bytes%0#0"
      ]
    },
    "1542": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1543": {
      "op": "box_get",
      "defined_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "collateral#0",
        "maybe_exists%1#0"
      ]
    },
    "1544": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0",
        "collateral#0"
      ]
    },
    "1545": {
      "op": "dup",
      "stack_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0",
        "collateral#0",
        "collateral#0 (copy)"
      ]
    },
    "1546": {
      "op": "cover 2",
      "stack_out": [
        "collateral#0",
        "i#0",
        "collateral#0",
        "maybe_exists%1#0",
        "collateral#0"
      ]
    },
    "1548": {
      "op": "frame_bury 0",
      "defined_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "collateral#0",
        "maybe_exists%1#0"
      ]
    },
    "1550": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "collateral#0",
        "i#0",
        "collateral#0"
      ]
    },
    "1551": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateral#0",
        "i#0",
        "collateral#0",
        "0"
      ]
    },
    "1552": {
      "op": "extract_uint64",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1553": {
      "op": "frame_dig -1",
      "defined_out": [
        "collateral#0",
        "collateralTokenId#0 (copy)",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "tmp%3#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1555": {
      "op": "btoi",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1556": {
      "op": "==",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "1557": {
      "op": "bz getCollateral_after_if_else@4",
      "stack_out": [
        "collateral#0",
        "i#0"
      ]
    },
    "1560": {
      "retsub": true,
      "op": "retsub",
      "stack_out": [
        "collateral#0",
        "i#0",
        "collateral#0"
      ]
    },
    "1561": {
      "block": "getCollateral_after_if_else@4",
      "stack_in": [
        "collateral#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "i#0"
      ]
    },
    "1563": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1564": {
      "op": "+",
      "stack_out": [
        "collateral#0",
        "i#0",
        "i#0"
      ]
    },
    "1565": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "i#0"
      ]
    },
    "1567": {
      "op": "b getCollateral_while_top@1"
    },
    "1570": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.updateCollateralTotal",
      "params": {
        "collateralTokenId#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "updateCollateralTotal",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1573": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateral#0"
      ]
    },
    "1574": {
      "op": "dupn 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1576": {
      "block": "updateCollateralTotal_while_top@1",
      "stack_in": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "0"
      ]
    },
    "1577": {
      "op": "bytec 5 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1579": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1580": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "maybe_value%0#0"
      ]
    },
    "1581": {
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "maybe_value%0#0",
        "i#0"
      ]
    },
    "1583": {
      "op": "dup"
    },
    "1584": {
      "op": "uncover 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%0#0"
      ]
    },
    "1586": {
      "op": "<",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "1587": {
      "error": "Collateral not found",
      "op": "assert // Collateral not found",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "1588": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "1589": {
      "op": "bytec 11 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "i#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%0#0",
        "\"accepted_collaterals\""
      ]
    },
    "1591": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "\"accepted_collaterals\"",
        "val_as_bytes%0#0"
      ]
    },
    "1592": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1593": {
      "op": "dup",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "1594": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "1596": {
      "op": "box_get",
      "defined_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "maybe_exists%1#0"
      ]
    },
    "1597": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "maybe_exists%1#0",
        "collateral#0"
      ]
    },
    "1598": {
      "op": "dup",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "maybe_exists%1#0",
        "collateral#0",
        "collateral#0 (copy)"
      ]
    },
    "1599": {
      "op": "cover 2",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "maybe_exists%1#0",
        "collateral#0"
      ]
    },
    "1601": {
      "op": "frame_bury 0",
      "defined_out": [
        "collateral#0",
        "i#0",
        "maybe_exists%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "maybe_exists%1#0"
      ]
    },
    "1603": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0"
      ]
    },
    "1604": {
      "op": "dup",
      "defined_out": [
        "collateral#0",
        "collateral#0 (copy)",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "collateral#0 (copy)"
      ]
    },
    "1605": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "tmp%2#0"
      ]
    },
    "1608": {
      "op": "frame_bury 2",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0"
      ]
    },
    "1610": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "0"
      ]
    },
    "1611": {
      "op": "extract_uint64",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1612": {
      "op": "frame_dig -2",
      "defined_out": [
        "collateral#0",
        "collateralTokenId#0 (copy)",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1614": {
      "op": "btoi",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1615": {
      "op": "==",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "1616": {
      "op": "bz updateCollateralTotal_after_if_else@4",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1619": {
      "op": "frame_dig 0",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0"
      ]
    },
    "1621": {
      "op": "dup",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "collateral#0 (copy)"
      ]
    },
    "1622": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "collateral#0",
        "collateral#0 (copy)",
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "collateral#0 (copy)",
        "16"
      ]
    },
    "1624": {
      "op": "extract_uint64",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "tmp%7#0"
      ]
    },
    "1625": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "tmp%7#0",
        "amount#0 (copy)"
      ]
    },
    "1627": {
      "op": "+",
      "defined_out": [
        "collateral#0",
        "i#0",
        "newTotal#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "collateral#0",
        "newTotal#0"
      ]
    },
    "1628": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "newTotal#0",
        "collateral#0"
      ]
    },
    "1629": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateral#0",
        "i#0",
        "newTotal#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "newTotal#0",
        "tmp%9#0"
      ]
    },
    "1632": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%9#0",
        "newTotal#0"
      ]
    },
    "1633": {
      "op": "itob",
      "defined_out": [
        "collateral#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%9#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%9#0",
        "val_as_bytes%1#0"
      ]
    },
    "1634": {
      "op": "frame_dig 2",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%9#0",
        "val_as_bytes%1#0",
        "tmp%2#0"
      ]
    },
    "1636": {
      "op": "uncover 2",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%1#0",
        "tmp%2#0",
        "tmp%9#0"
      ]
    },
    "1638": {
      "op": "concat",
      "defined_out": [
        "collateral#0",
        "encoded_tuple_buffer%2#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1639": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "1640": {
      "op": "concat",
      "defined_out": [
        "collateral#0",
        "encoded_tuple_buffer%3#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1641": {
      "op": "frame_dig 1",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "encoded_tuple_buffer%3#0",
        "tmp%1#0"
      ]
    },
    "1643": {
      "op": "swap",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "tmp%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "1644": {
      "op": "box_put",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1645": {
      "retsub": true,
      "op": "retsub"
    },
    "1646": {
      "block": "updateCollateralTotal_after_if_else@4",
      "stack_in": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "1648": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1649": {
      "op": "+",
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "1650": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "collateral#0",
        "tmp%1#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1652": {
      "op": "b updateCollateralTotal_while_top@1"
    },
    "1655": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.addNewCollateralType",
      "params": {
        "collateralTokenId#0": "bytes",
        "baseTokenId#0": "bytes"
      },
      "block": "addNewCollateralType",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1658": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1659": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "1660": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1661": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1662": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1663": {
      "op": "txn Sender",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0"
      ]
    },
    "1665": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "0"
      ]
    },
    "1666": {
      "op": "bytec 6 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "1668": {
      "op": "app_global_get_ex",
      "defined_out": [
        "baseToken#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1669": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "1670": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%1#0"
      ]
    },
    "1671": {
      "op": "assert",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1672": {
      "op": "frame_dig -2",
      "defined_out": [
        "baseToken#0",
        "collateralTokenId#0 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1674": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "1675": {
      "op": "dup",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1676": {
      "op": "dig 2",
      "defined_out": [
        "baseToken#0",
        "baseToken#0 (copy)",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "baseToken#0 (copy)"
      ]
    },
    "1678": {
      "op": "!=",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1679": {
      "op": "assert",
      "stack_out": [
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "1680": {
      "op": "frame_dig -1",
      "defined_out": [
        "baseToken#0",
        "baseTokenId#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0",
        "baseTokenId#0 (copy)"
      ]
    },
    "1682": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "1683": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "tmp%4#0",
        "baseToken#0"
      ]
    },
    "1685": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%5#0"
      ]
    },
    "1686": {
      "op": "assert",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1687": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%2#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1689": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.collateralExists",
      "op": "callsub collateralExists",
      "defined_out": [
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%6#0"
      ]
    },
    "1692": {
      "op": "!",
      "defined_out": [
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%7#0"
      ]
    },
    "1693": {
      "op": "assert",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1694": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%2#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "1696": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%2#0",
        "collateralTokenId#0 (copy)",
        "baseTokenId#0 (copy)"
      ]
    },
    "1698": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1699": {
      "op": "pushbytes 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "encoded_tuple_buffer%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "encoded_tuple_buffer%2#0",
        "0x0000000000000000"
      ]
    },
    "1709": {
      "op": "concat",
      "defined_out": [
        "newAcceptedCollateral#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0"
      ]
    },
    "1710": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "0"
      ]
    },
    "1711": {
      "op": "bytec 5 // \"accepted_collaterals_count\"",
      "defined_out": [
        "\"accepted_collaterals_count\"",
        "0",
        "newAcceptedCollateral#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1713": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "newAcceptedCollateral#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1714": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "maybe_value%2#0"
      ]
    },
    "1715": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0",
        "newAcceptedCollateral#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "1716": {
      "op": "+",
      "defined_out": [
        "newAcceptedCollateral#0",
        "tmp%2#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "to_encode%0#0"
      ]
    },
    "1717": {
      "op": "itob",
      "defined_out": [
        "newAcceptedCollateral#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "val_as_bytes%0#0"
      ]
    },
    "1718": {
      "op": "bytec 11 // \"accepted_collaterals\"",
      "defined_out": [
        "\"accepted_collaterals\"",
        "newAcceptedCollateral#0",
        "tmp%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "val_as_bytes%0#0",
        "\"accepted_collaterals\""
      ]
    },
    "1720": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "\"accepted_collaterals\"",
        "val_as_bytes%0#0"
      ]
    },
    "1721": {
      "op": "concat",
      "defined_out": [
        "newAcceptedCollateral#0",
        "tmp%2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "newAcceptedCollateral#0",
        "tmp%8#0"
      ]
    },
    "1722": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "tmp%8#0",
        "newAcceptedCollateral#0"
      ]
    },
    "1723": {
      "op": "box_put",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1724": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1725": {
      "op": "bytec 5 // \"accepted_collaterals_count\"",
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1727": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1728": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%3#0"
      ]
    },
    "1729": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "1730": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "new_state_value%0#0"
      ]
    },
    "1731": {
      "op": "bytec 5 // \"accepted_collaterals_count\"",
      "stack_out": [
        "tmp%2#0",
        "new_state_value%0#0",
        "\"accepted_collaterals_count\""
      ]
    },
    "1733": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "\"accepted_collaterals_count\"",
        "new_state_value%0#0"
      ]
    },
    "1734": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1735": {
      "op": "itxn_begin"
    },
    "1736": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1738": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1739": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%2#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "1740": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%2#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1742": {
      "op": "uncover 2",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%2#0"
      ]
    },
    "1744": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1746": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1748": {
      "op": "itxn_field Sender",
      "stack_out": []
    },
    "1750": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "1751": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1753": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1754": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1756": {
      "op": "itxn_submit"
    },
    "1757": {
      "retsub": true,
      "op": "retsub"
    },
    "1758": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.depositASA",
      "params": {
        "assetTransferTxn#0": "uint64",
        "amount#0": "uint64"
      },
      "block": "depositASA",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1761": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1762": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "1763": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1764": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1765": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1766": {
      "op": "frame_dig -2",
      "defined_out": [
        "assetTransferTxn#0 (copy)",
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "1768": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0"
      ]
    },
    "1770": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1772": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "1773": {
      "op": "bz depositASA_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1776": {
      "op": "frame_dig -2",
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "1778": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "baseToken#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%3#0"
      ]
    },
    "1780": {
      "op": "frame_dig 0",
      "stack_out": [
        "baseToken#0",
        "tmp%3#0",
        "baseToken#0"
      ]
    },
    "1782": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%4#0"
      ]
    },
    "1783": {
      "op": "bz depositASA_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1786": {
      "op": "frame_dig -2",
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "1788": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%5#0"
      ]
    },
    "1790": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%5#0",
        "amount#0 (copy)"
      ]
    },
    "1792": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%6#0"
      ]
    },
    "1793": {
      "op": "bz depositASA_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1796": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "1797": {
      "block": "depositASA_bool_merge@5",
      "stack_in": [
        "baseToken#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1798": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%7#0"
      ]
    },
    "1800": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%7#0",
        "0"
      ]
    },
    "1801": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%7#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "1802": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%7#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1803": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "tmp%7#0",
        "maybe_value%1#0"
      ]
    },
    "1804": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1805": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "depositBalance.0#0",
        "depositBalance.1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "depositBalance.0#0",
        "depositBalance.1#0"
      ]
    },
    "1807": {
      "op": "pop",
      "stack_out": [
        "baseToken#0",
        "depositBalance.0#0"
      ]
    },
    "1808": {
      "op": "bnz depositASA_else_body@7",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1811": {
      "op": "frame_dig -1",
      "defined_out": [
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "1813": {
      "block": "depositASA_after_if_else@8",
      "stack_in": [
        "baseToken#0",
        "lstDue#2"
      ],
      "op": "itxn_begin"
    },
    "1814": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1816": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "1817": {
      "op": "bytec 20 // \"lst_token_id\"",
      "defined_out": [
        "\"lst_token_id\"",
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0",
        "\"lst_token_id\""
      ]
    },
    "1819": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1820": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0"
      ]
    },
    "1821": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1822": {
      "op": "dig 2",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "lstDue#2",
        "lstDue#2 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "lstDue#2 (copy)"
      ]
    },
    "1824": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1826": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1828": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "1830": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "4"
      ]
    },
    "1831": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "1833": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "0"
      ]
    },
    "1834": {
      "op": "itxn_field Fee",
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "1836": {
      "op": "itxn_submit"
    },
    "1837": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "0"
      ]
    },
    "1838": {
      "op": "bytec 8 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0",
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "0",
        "\"circulating_lst\""
      ]
    },
    "1840": {
      "op": "app_global_get_ex",
      "defined_out": [
        "lstDue#2",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1841": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "lstDue#2",
        "maybe_value%3#0"
      ]
    },
    "1842": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "new_state_value%0#0"
      ]
    },
    "1843": {
      "op": "bytec 8 // \"circulating_lst\"",
      "stack_out": [
        "baseToken#0",
        "new_state_value%0#0",
        "\"circulating_lst\""
      ]
    },
    "1845": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "\"circulating_lst\"",
        "new_state_value%0#0"
      ]
    },
    "1846": {
      "op": "app_global_put",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1847": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "0"
      ]
    },
    "1848": {
      "op": "bytec_3 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "1849": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1850": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "maybe_value%4#0"
      ]
    },
    "1851": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%4#0",
        "amount#0 (copy)"
      ]
    },
    "1853": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "new_state_value%1#0"
      ]
    },
    "1854": {
      "op": "bytec_3 // \"total_deposits\"",
      "stack_out": [
        "baseToken#0",
        "new_state_value%1#0",
        "\"total_deposits\""
      ]
    },
    "1855": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "\"total_deposits\"",
        "new_state_value%1#0"
      ]
    },
    "1856": {
      "op": "app_global_put",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1857": {
      "retsub": true,
      "op": "retsub"
    },
    "1858": {
      "block": "depositASA_else_body@7",
      "stack_in": [
        "baseToken#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0"
      ]
    },
    "1859": {
      "op": "bytec 8 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0",
        "\"circulating_lst\""
      ]
    },
    "1861": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1862": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "maybe_value%0#1"
      ]
    },
    "1863": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "baseToken#0",
        "maybe_value%0#1",
        "10000"
      ]
    },
    "1864": {
      "op": "mulw",
      "defined_out": [
        "highBits1#0",
        "lowBits1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0"
      ]
    },
    "1865": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0",
        "0"
      ]
    },
    "1866": {
      "op": "bytec_3 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0",
        "highBits1#0",
        "lowBits1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "1867": {
      "op": "app_global_get_ex",
      "defined_out": [
        "highBits1#0",
        "lowBits1#0",
        "maybe_exists%1#0",
        "maybe_value%1#1"
      ],
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "1868": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "highBits1#0",
        "lowBits1#0",
        "maybe_value%1#1"
      ]
    },
    "1869": {
      "op": "divw",
      "defined_out": [
        "lstRatio#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstRatio#0"
      ]
    },
    "1870": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "lstRatio#0"
      ],
      "stack_out": [
        "baseToken#0",
        "lstRatio#0",
        "amount#0 (copy)"
      ]
    },
    "1872": {
      "op": "mulw",
      "defined_out": [
        "highBits2#0",
        "lowBits2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "highBits2#0",
        "lowBits2#0"
      ]
    },
    "1873": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "baseToken#0",
        "highBits2#0",
        "lowBits2#0",
        "10000"
      ]
    },
    "1874": {
      "op": "divw",
      "defined_out": [
        "lstDue#2"
      ],
      "stack_out": [
        "baseToken#0",
        "lstDue#2"
      ]
    },
    "1875": {
      "op": "b depositASA_after_if_else@8"
    },
    "1878": {
      "block": "depositASA_bool_false@4",
      "stack_in": [
        "baseToken#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "1879": {
      "op": "b depositASA_bool_merge@5"
    },
    "1882": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.withdrawDeposit",
      "params": {
        "assetTransferTxn#0": "uint64",
        "amount#0": "uint64",
        "lstAppId#0": "uint64"
      },
      "block": "withdrawDeposit",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1885": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1886": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"base_token_id\""
      ]
    },
    "1887": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1888": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1889": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1890": {
      "op": "frame_dig -3",
      "defined_out": [
        "assetTransferTxn#0 (copy)",
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "1892": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0"
      ]
    },
    "1894": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1896": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "1897": {
      "op": "bz withdrawDeposit_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1900": {
      "op": "frame_dig -3",
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "1902": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "baseToken#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%3#0"
      ]
    },
    "1904": {
      "op": "frame_dig 0",
      "stack_out": [
        "baseToken#0",
        "tmp%3#0",
        "baseToken#0"
      ]
    },
    "1906": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%4#0"
      ]
    },
    "1907": {
      "op": "bz withdrawDeposit_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1910": {
      "op": "frame_dig -3",
      "stack_out": [
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "1912": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%5#0"
      ]
    },
    "1914": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%5#0",
        "amount#0 (copy)"
      ]
    },
    "1916": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%6#0"
      ]
    },
    "1917": {
      "op": "bz withdrawDeposit_bool_false@4",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1920": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "baseToken#0"
      ],
      "stack_out": [
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "1921": {
      "block": "withdrawDeposit_bool_merge@5",
      "stack_in": [
        "baseToken#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1922": {
      "op": "itxn_begin"
    },
    "1923": {
      "op": "bytec 12 // method \"getCirculatingLST()uint64\"",
      "defined_out": [
        "Method(getCirculatingLST()uint64)"
      ],
      "stack_out": [
        "baseToken#0",
        "Method(getCirculatingLST()uint64)"
      ]
    },
    "1925": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1927": {
      "op": "frame_dig -1",
      "defined_out": [
        "lstAppId#0 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "lstAppId#0 (copy)"
      ]
    },
    "1929": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1931": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "baseToken#0",
        "appl"
      ]
    },
    "1933": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1935": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "baseToken#0",
        "0"
      ]
    },
    "1936": {
      "op": "itxn_field Fee",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "1938": {
      "op": "itxn_submit"
    },
    "1939": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "awst_tmp%0#0"
      ]
    },
    "1941": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "baseToken#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "1942": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "baseToken#0",
        "awst_tmp%0#0",
        "tmp%0#1"
      ]
    },
    "1945": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "tmp%0#1",
        "awst_tmp%0#0"
      ]
    },
    "1946": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#1",
        "tmp%1#1"
      ]
    },
    "1949": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#1",
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "1950": {
      "op": "==",
      "defined_out": [
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "tmp%0#1",
        "tmp%2#0"
      ]
    },
    "1951": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "baseToken#0",
        "tmp%0#1"
      ]
    },
    "1952": {
      "op": "btoi",
      "defined_out": [
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0"
      ]
    },
    "1953": {
      "op": "itxn_begin"
    },
    "1954": {
      "op": "bytec 13 // method \"getTotalDeposits()uint64\"",
      "defined_out": [
        "Method(getTotalDeposits()uint64)",
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "Method(getTotalDeposits()uint64)"
      ]
    },
    "1956": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0"
      ]
    },
    "1958": {
      "op": "frame_dig -1",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "lstAppId#0 (copy)"
      ]
    },
    "1960": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0"
      ]
    },
    "1962": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "appl"
      ]
    },
    "1964": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0"
      ]
    },
    "1966": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "0"
      ]
    },
    "1967": {
      "op": "itxn_field Fee",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0"
      ]
    },
    "1969": {
      "op": "itxn_submit"
    },
    "1970": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0",
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0"
      ]
    },
    "1972": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "circulatingExternalLST#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "1973": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%1#0",
        "circulatingExternalLST#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0",
        "tmp%4#1"
      ]
    },
    "1976": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "tmp%4#1",
        "awst_tmp%1#0"
      ]
    },
    "1977": {
      "op": "extract 0 4",
      "defined_out": [
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%5#1"
      ]
    },
    "1980": {
      "op": "bytec_1 // 0x151f7c75",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%5#1",
        "0x151f7c75"
      ]
    },
    "1981": {
      "op": "==",
      "defined_out": [
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "tmp%4#1",
        "tmp%6#0"
      ]
    },
    "1982": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "tmp%4#1"
      ]
    },
    "1983": {
      "op": "btoi",
      "defined_out": [
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ]
    },
    "1984": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount#0 (copy)",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0",
        "amount#0 (copy)"
      ]
    },
    "1986": {
      "op": "mulw",
      "defined_out": [
        "circulatingExternalLST#0",
        "hi#0",
        "lo#0"
      ],
      "stack_out": [
        "baseToken#0",
        "circulatingExternalLST#0",
        "hi#0",
        "lo#0"
      ]
    },
    "1987": {
      "op": "uncover 2",
      "stack_out": [
        "baseToken#0",
        "hi#0",
        "lo#0",
        "circulatingExternalLST#0"
      ]
    },
    "1989": {
      "op": "divw",
      "defined_out": [
        "asaDue#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0"
      ]
    },
    "1990": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "asaDue#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%7#0"
      ]
    },
    "1992": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%7#0",
        "0"
      ]
    },
    "1993": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "asaDue#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%7#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "1994": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asaDue#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%7#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1995": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%7#0",
        "maybe_value%1#0"
      ]
    },
    "1996": {
      "op": "btoi",
      "defined_out": [
        "asaDue#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1997": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "asaDue#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "1999": {
      "op": "pop",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%9#0"
      ]
    },
    "2000": {
      "op": "dig 1",
      "defined_out": [
        "asaDue#0",
        "asaDue#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%9#0",
        "asaDue#0 (copy)"
      ]
    },
    "2002": {
      "op": ">=",
      "defined_out": [
        "asaDue#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "tmp%11#0"
      ]
    },
    "2003": {
      "op": "assert",
      "stack_out": [
        "baseToken#0",
        "asaDue#0"
      ]
    },
    "2004": {
      "op": "itxn_begin"
    },
    "2005": {
      "op": "txn Sender",
      "defined_out": [
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2007": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "2008": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2009": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2010": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%2#0"
      ]
    },
    "2011": {
      "op": "btoi",
      "defined_out": [
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "2012": {
      "op": "dig 2",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "asaDue#0 (copy)"
      ]
    },
    "2014": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "2016": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2018": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "baseToken#0",
        "asaDue#0"
      ]
    },
    "2020": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "asaDue#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "4"
      ]
    },
    "2021": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "baseToken#0",
        "asaDue#0"
      ]
    },
    "2023": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "0"
      ]
    },
    "2024": {
      "op": "itxn_field Fee",
      "stack_out": [
        "baseToken#0",
        "asaDue#0"
      ]
    },
    "2026": {
      "op": "itxn_submit"
    },
    "2027": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "0"
      ]
    },
    "2028": {
      "op": "bytec 8 // \"circulating_lst\"",
      "defined_out": [
        "\"circulating_lst\"",
        "0",
        "asaDue#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "0",
        "\"circulating_lst\""
      ]
    },
    "2030": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asaDue#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2031": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "maybe_value%3#0"
      ]
    },
    "2032": {
      "op": "frame_dig -2",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "maybe_value%3#0",
        "amount#0 (copy)"
      ]
    },
    "2034": {
      "op": "-",
      "defined_out": [
        "asaDue#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "new_state_value%0#0"
      ]
    },
    "2035": {
      "op": "bytec 8 // \"circulating_lst\"",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "new_state_value%0#0",
        "\"circulating_lst\""
      ]
    },
    "2037": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "\"circulating_lst\"",
        "new_state_value%0#0"
      ]
    },
    "2038": {
      "op": "app_global_put",
      "stack_out": [
        "baseToken#0",
        "asaDue#0"
      ]
    },
    "2039": {
      "op": "intc_0 // 0",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "0"
      ]
    },
    "2040": {
      "op": "bytec_3 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0",
        "asaDue#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "2041": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asaDue#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2042": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "baseToken#0",
        "asaDue#0",
        "maybe_value%4#0"
      ]
    },
    "2043": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "maybe_value%4#0",
        "asaDue#0"
      ]
    },
    "2044": {
      "op": "-",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "baseToken#0",
        "new_state_value%1#0"
      ]
    },
    "2045": {
      "op": "bytec_3 // \"total_deposits\"",
      "stack_out": [
        "baseToken#0",
        "new_state_value%1#0",
        "\"total_deposits\""
      ]
    },
    "2046": {
      "op": "swap",
      "stack_out": [
        "baseToken#0",
        "\"total_deposits\"",
        "new_state_value%1#0"
      ]
    },
    "2047": {
      "op": "app_global_put",
      "stack_out": [
        "baseToken#0"
      ]
    },
    "2048": {
      "retsub": true,
      "op": "retsub"
    },
    "2049": {
      "block": "withdrawDeposit_bool_false@4",
      "stack_in": [
        "baseToken#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "2050": {
      "op": "b withdrawDeposit_bool_merge@5"
    },
    "2053": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.borrow",
      "params": {
        "assetTransferTxn#0": "uint64",
        "requestedLoanAmount#0": "uint64",
        "lstApp#0": "uint64",
        "collateralTokenId#0": "bytes"
      },
      "block": "borrow",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "2056": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "2057": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "\"loan_record\"",
        "tmp%0#0"
      ]
    },
    "2059": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2060": {
      "op": "box_len",
      "defined_out": [
        "hasLoan#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "hasLoan#0"
      ]
    },
    "2061": {
      "op": "bury 1",
      "stack_out": [
        "hasLoan#0"
      ]
    },
    "2063": {
      "op": "frame_dig -4",
      "defined_out": [
        "assetTransferTxn#0 (copy)",
        "hasLoan#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2065": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "hasLoan#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%2#0"
      ]
    },
    "2067": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "hasLoan#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2069": {
      "op": "==",
      "defined_out": [
        "hasLoan#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%4#0"
      ]
    },
    "2070": {
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "stack_out": [
        "hasLoan#0"
      ]
    },
    "2071": {
      "op": "frame_dig -1",
      "defined_out": [
        "collateralTokenId#0 (copy)",
        "hasLoan#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2073": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.collateralExists",
      "op": "callsub collateralExists",
      "defined_out": [
        "hasLoan#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "tmp%5#0"
      ]
    },
    "2076": {
      "error": "unsupported collateral",
      "op": "assert // unsupported collateral",
      "stack_out": [
        "hasLoan#0"
      ]
    },
    "2077": {
      "op": "frame_dig -4",
      "stack_out": [
        "hasLoan#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2079": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "hasLoan#0",
        "collateralDeposit#0"
      ]
    },
    "2081": {
      "op": "dup",
      "stack_out": [
        "hasLoan#0",
        "collateralDeposit#0",
        "collateralDeposit#0"
      ]
    },
    "2082": {
      "op": "cover 2",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0"
      ]
    },
    "2084": {
      "op": "frame_dig -1",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2086": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getCollateral",
      "op": "callsub getCollateral",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2089": {
      "op": "itxn_begin"
    },
    "2090": {
      "op": "bytec 12 // method \"getCirculatingLST()uint64\"",
      "defined_out": [
        "Method(getCirculatingLST()uint64)",
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "Method(getCirculatingLST()uint64)"
      ]
    },
    "2092": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2094": {
      "op": "frame_dig -2",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "lstApp#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "lstApp#0 (copy)"
      ]
    },
    "2096": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2098": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "acceptedCollateral#0",
        "appl",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "appl"
      ]
    },
    "2100": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2102": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "0"
      ]
    },
    "2103": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0"
      ]
    },
    "2105": {
      "op": "itxn_submit"
    },
    "2106": {
      "op": "itxn LastLog",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "awst_tmp%0#0"
      ]
    },
    "2108": {
      "op": "dup",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2109": {
      "op": "extract 4 0",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "awst_tmp%0#0",
        "tmp%6#0"
      ]
    },
    "2112": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%6#0",
        "awst_tmp%0#0"
      ]
    },
    "2113": {
      "op": "extract 0 4",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2116": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%6#0",
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "2117": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "2118": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "tmp%6#0"
      ]
    },
    "2119": {
      "op": "btoi",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2120": {
      "op": "itxn_begin"
    },
    "2121": {
      "op": "bytec 13 // method \"getTotalDeposits()uint64\"",
      "defined_out": [
        "Method(getTotalDeposits()uint64)",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "Method(getTotalDeposits()uint64)"
      ]
    },
    "2123": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2125": {
      "op": "frame_dig -2",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "lstApp#0 (copy)"
      ]
    },
    "2127": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2129": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "appl"
      ]
    },
    "2131": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2133": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "0"
      ]
    },
    "2134": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0"
      ]
    },
    "2136": {
      "op": "itxn_submit"
    },
    "2137": {
      "op": "itxn LastLog",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%1#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0"
      ]
    },
    "2139": {
      "op": "dup",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "2140": {
      "op": "extract 4 0",
      "defined_out": [
        "acceptedCollateral#0",
        "awst_tmp%1#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "awst_tmp%1#0",
        "tmp%10#0"
      ]
    },
    "2143": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%10#0",
        "awst_tmp%1#0"
      ]
    },
    "2144": {
      "op": "extract 0 4",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "2147": {
      "op": "bytec_1 // 0x151f7c75",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%10#0",
        "tmp%11#0",
        "0x151f7c75"
      ]
    },
    "2148": {
      "op": "==",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "2149": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "tmp%10#0"
      ]
    },
    "2150": {
      "op": "btoi",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "totalDepositsExternal#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralDeposit#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0"
      ]
    },
    "2151": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "totalDepositsExternal#0",
        "collateralDeposit#0"
      ]
    },
    "2153": {
      "op": "mulw",
      "defined_out": [
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "collateralDeposit#0",
        "hC#0",
        "hasLoan#0",
        "lC#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "acceptedCollateral#0",
        "circulatingExternalLST#0",
        "hC#0",
        "lC#0"
      ]
    },
    "2154": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "acceptedCollateral#0",
        "hC#0",
        "lC#0",
        "circulatingExternalLST#0"
      ]
    },
    "2156": {
      "op": "divw",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "acceptedCollateral#0",
        "underlyingCollateral#0"
      ]
    },
    "2157": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0",
        "acceptedCollateral#0"
      ]
    },
    "2158": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "acceptedCollateral#0",
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0",
        "acceptedCollateral#0",
        "8"
      ]
    },
    "2160": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%15#0",
        "underlyingCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0",
        "tmp%15#0"
      ]
    },
    "2161": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getPricesFromOracles",
      "op": "callsub getPricesFromOracles",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "oraclePrice#0",
        "underlyingCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "underlyingCollateral#0",
        "oraclePrice#0"
      ]
    },
    "2164": {
      "op": "mulw",
      "defined_out": [
        "collateralDeposit#0",
        "hU#0",
        "hasLoan#0",
        "lU#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "hU#0",
        "lU#0"
      ]
    },
    "2165": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "collateralDeposit#0",
        "hU#0",
        "hasLoan#0",
        "lU#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "hU#0",
        "lU#0",
        "1"
      ]
    },
    "2166": {
      "op": "divw",
      "defined_out": [
        "collateralDeposit#0",
        "collateralUSD#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0"
      ]
    },
    "2167": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0",
        "0"
      ]
    },
    "2168": {
      "op": "bytec 16 // \"ltv_bps\"",
      "defined_out": [
        "\"ltv_bps\"",
        "0",
        "collateralDeposit#0",
        "collateralUSD#0",
        "hasLoan#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0",
        "0",
        "\"ltv_bps\""
      ]
    },
    "2170": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "collateralUSD#0",
        "hasLoan#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2171": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "collateralUSD#0",
        "maybe_value%1#0"
      ]
    },
    "2172": {
      "op": "*",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%16#0"
      ]
    },
    "2173": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "tmp%16#0",
        "10000"
      ]
    },
    "2174": {
      "op": "/",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ]
    },
    "2175": {
      "op": "swap",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0"
      ]
    },
    "2176": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "0"
      ]
    },
    "2177": {
      "op": "bytec 18 // \"origination_fee_bps\"",
      "defined_out": [
        "\"origination_fee_bps\"",
        "0",
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "0",
        "\"origination_fee_bps\""
      ]
    },
    "2179": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2180": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "maybe_value%2#0"
      ]
    },
    "2181": {
      "op": "frame_dig -3",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "maybe_value%2#0",
        "requestedLoanAmount#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "maybe_value%2#0",
        "requestedLoanAmount#0 (copy)"
      ]
    },
    "2183": {
      "op": "*",
      "defined_out": [
        "collateralDeposit#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "tmp%17#0"
      ]
    },
    "2184": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "tmp%17#0",
        "10000"
      ]
    },
    "2185": {
      "op": "/",
      "defined_out": [
        "collateralDeposit#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0"
      ]
    },
    "2186": {
      "op": "frame_dig -3",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0",
        "requestedLoanAmount#0 (copy)"
      ]
    },
    "2188": {
      "op": "dig 1",
      "defined_out": [
        "collateralDeposit#0",
        "fee#0",
        "fee#0 (copy)",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "requestedLoanAmount#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0",
        "requestedLoanAmount#0 (copy)",
        "fee#0 (copy)"
      ]
    },
    "2190": {
      "op": "-",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0",
        "disbursement#0"
      ]
    },
    "2191": {
      "op": "dup",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "fee#0",
        "disbursement#0",
        "disbursement#0 (copy)"
      ]
    },
    "2192": {
      "op": "cover 2",
      "stack_out": [
        "collateralDeposit#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "disbursement#0"
      ]
    },
    "2194": {
      "op": "cover 4",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0"
      ]
    },
    "2196": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "0"
      ]
    },
    "2197": {
      "op": "bytec 7 // \"fee_pool\"",
      "defined_out": [
        "\"fee_pool\"",
        "0",
        "collateralDeposit#0",
        "disbursement#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "0",
        "\"fee_pool\""
      ]
    },
    "2199": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "fee#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2200": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "fee#0",
        "maybe_value%3#0"
      ]
    },
    "2201": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "new_state_value%0#0"
      ]
    },
    "2202": {
      "op": "bytec 7 // \"fee_pool\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "new_state_value%0#0",
        "\"fee_pool\""
      ]
    },
    "2204": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "\"fee_pool\"",
        "new_state_value%0#0"
      ]
    },
    "2205": {
      "op": "app_global_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0"
      ]
    },
    "2206": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "0"
      ]
    },
    "2207": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2208": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2209": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "maybe_value%4#0"
      ]
    },
    "2210": {
      "op": "btoi",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "tmp%18#0"
      ]
    },
    "2211": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "collateralDeposit#0",
        "decExists#0",
        "decimals#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "decimals#0",
        "decExists#0"
      ]
    },
    "2213": {
      "op": "pop",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "decimals#0"
      ]
    },
    "2214": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "collateralDeposit#0",
        "decimals#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "decimals#0",
        "10"
      ]
    },
    "2216": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "10",
        "decimals#0"
      ]
    },
    "2217": {
      "op": "exp",
      "defined_out": [
        "assetScale#0",
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "disbursement#0",
        "assetScale#0"
      ]
    },
    "2218": {
      "op": "mulw",
      "defined_out": [
        "aH#0",
        "aL#0",
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "aH#0",
        "aL#0"
      ]
    },
    "2219": {
      "op": "intc 4 // 4294967296",
      "defined_out": [
        "4294967296",
        "aH#0",
        "aL#0",
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "aH#0",
        "aL#0",
        "4294967296"
      ]
    },
    "2221": {
      "op": "divw",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "interim#0",
        "maxBorrowUSD#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "interim#0"
      ]
    },
    "2222": {
      "op": "intc 4 // 4294967296",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "interim#0",
        "4294967296"
      ]
    },
    "2224": {
      "op": "/",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "hasLoan#0",
        "maxBorrowUSD#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "hasLoan#0",
        "scaledDown#0"
      ]
    },
    "2225": {
      "op": "cover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "hasLoan#0"
      ]
    },
    "2227": {
      "op": "bz borrow_else_body@6",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0"
      ]
    },
    "2230": {
      "op": "txn Sender",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "scaledDown#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "tmp%19#0"
      ]
    },
    "2232": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getLoanRecord",
      "op": "callsub getLoanRecord",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0"
      ]
    },
    "2235": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.accrueInterest",
      "op": "callsub accrueInterest",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#1",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#1"
      ]
    },
    "2238": {
      "op": "pop",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0"
      ]
    },
    "2239": {
      "op": "bytec_2 // \"loan_record\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "\"loan_record\""
      ]
    },
    "2240": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "scaledDown#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "\"loan_record\"",
        "tmp%20#0"
      ]
    },
    "2242": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "scaledDown#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "tmp%21#0"
      ]
    },
    "2243": {
      "op": "dig 1",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#0 (copy)",
        "scaledDown#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "tmp%21#0",
        "old#0 (copy)"
      ]
    },
    "2245": {
      "op": "box_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0"
      ]
    },
    "2246": {
      "op": "dup",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#0 (copy)"
      ]
    },
    "2247": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#0 (copy)",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "old#0 (copy)",
        "56"
      ]
    },
    "2249": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0"
      ]
    },
    "2250": {
      "op": "dup",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "oldDebt#0 (copy)",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "oldDebt#0 (copy)"
      ]
    },
    "2251": {
      "op": "frame_dig -3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "oldDebt#0 (copy)",
        "requestedLoanAmount#0 (copy)"
      ]
    },
    "2253": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "totalRequested#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "old#0",
        "oldDebt#0",
        "totalRequested#0"
      ]
    },
    "2254": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "totalRequested#0",
        "maxBorrowUSD#0"
      ]
    },
    "2256": {
      "op": "<=",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "tmp%24#0"
      ]
    },
    "2257": {
      "error": "exceeds LTV limit with existing debt",
      "op": "assert // exceeds LTV limit with existing debt",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0"
      ]
    },
    "2258": {
      "op": "itxn_begin"
    },
    "2259": {
      "op": "dig 1",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "old#0 (copy)"
      ]
    },
    "2261": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "old#0 (copy)",
        "oldDebt#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "old#0 (copy)",
        "72"
      ]
    },
    "2263": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%2%%param_ConfigAsset_idx_0#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "inner_txn_params%2%%param_ConfigAsset_idx_0#0"
      ]
    },
    "2264": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%2%%param_ConfigAsset_idx_0#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "inner_txn_params%2%%param_ConfigAsset_idx_0#0",
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ]
    },
    "2266": {
      "op": "itxn_field Sender",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "inner_txn_params%2%%param_ConfigAsset_idx_0#0"
      ]
    },
    "2268": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0"
      ]
    },
    "2270": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "3"
      ]
    },
    "2272": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0"
      ]
    },
    "2274": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "0"
      ]
    },
    "2275": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0"
      ]
    },
    "2277": {
      "op": "itxn_submit"
    },
    "2278": {
      "op": "dig 1",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "old#0 (copy)"
      ]
    },
    "2280": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "old#0 (copy)",
        "oldDebt#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "old#0 (copy)",
        "40"
      ]
    },
    "2282": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "tmp%27#0"
      ]
    },
    "2283": {
      "op": "frame_dig 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "tmp%27#0",
        "collateralDeposit#0"
      ]
    },
    "2285": {
      "op": "dup",
      "defined_out": [
        "collateralDeposit#0",
        "collateralDeposit#0 (copy)",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "old#0",
        "oldDebt#0",
        "tmp%27#0",
        "collateralDeposit#0 (copy)",
        "collateralDeposit#0 (copy)"
      ]
    },
    "2286": {
      "op": "cover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "oldDebt#0",
        "tmp%27#0",
        "collateralDeposit#0 (copy)"
      ]
    },
    "2288": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "oldDebt#0",
        "totalCollateral#0"
      ]
    },
    "2289": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "oldDebt#0"
      ]
    },
    "2290": {
      "op": "frame_dig 1",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "oldDebt#0",
        "disbursement#0"
      ]
    },
    "2292": {
      "op": "dup",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "disbursement#0 (copy)",
        "old#0",
        "oldDebt#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "oldDebt#0",
        "disbursement#0 (copy)",
        "disbursement#0 (copy)"
      ]
    },
    "2293": {
      "op": "cover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "oldDebt#0",
        "disbursement#0 (copy)"
      ]
    },
    "2295": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "newDebt#0"
      ]
    },
    "2296": {
      "op": "dig 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "newDebt#0",
        "old#0 (copy)"
      ]
    },
    "2298": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "old#0 (copy)",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "newDebt#0",
        "old#0 (copy)",
        "48"
      ]
    },
    "2300": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "scaledDown#0",
        "tmp%30#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "disbursement#0",
        "newDebt#0",
        "tmp%30#0"
      ]
    },
    "2301": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "tmp%30#0",
        "disbursement#0"
      ]
    },
    "2303": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0"
      ]
    },
    "2304": {
      "op": "itxn_begin"
    },
    "2305": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0"
      ]
    },
    "2307": {
      "op": "dig 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "old#0 (copy)"
      ]
    },
    "2309": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0"
      ]
    },
    "2312": {
      "op": "pushbytes \"r\"",
      "defined_out": [
        "\"r\"",
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "\"r\""
      ]
    },
    "2315": {
      "op": "dig 1",
      "defined_out": [
        "\"r\"",
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%31#0 (copy)",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "\"r\"",
        "tmp%31#0 (copy)"
      ]
    },
    "2317": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0"
      ]
    },
    "2318": {
      "op": "dup",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%32#0 (copy)",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%32#0 (copy)"
      ]
    },
    "2319": {
      "op": "pushbytes \"b\"",
      "defined_out": [
        "\"b\"",
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%32#0 (copy)",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%32#0 (copy)",
        "\"b\""
      ]
    },
    "2322": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0"
      ]
    },
    "2323": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "0"
      ]
    },
    "2324": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2325": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2326": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0",
        "tmp%33#0",
        "maybe_value%5#0"
      ]
    },
    "2327": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0"
      ]
    },
    "2328": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "0"
      ]
    },
    "2329": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2330": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%32#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2331": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "tmp%32#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "maybe_value%6#0"
      ]
    },
    "2332": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "maybe_value%6#0",
        "tmp%32#0"
      ]
    },
    "2334": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "tmp%32#0",
        "maybe_value%6#0"
      ]
    },
    "2335": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "2336": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2338": {
      "op": "txn Sender",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "2340": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "2342": {
      "op": "dup",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "2343": {
      "op": "txn Sender",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%36#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "tmp%36#0"
      ]
    },
    "2345": {
      "op": "bytec 10 // \":\"",
      "defined_out": [
        "\":\"",
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%36#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "tmp%36#0",
        "\":\""
      ]
    },
    "2347": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%37#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "tmp%37#0"
      ]
    },
    "2348": {
      "op": "frame_dig -1",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "tmp%37#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2350": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%38#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "tmp%38#0"
      ]
    },
    "2351": {
      "op": "bytec 10 // \":\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "tmp%38#0",
        "\":\""
      ]
    },
    "2353": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%39#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "tmp%39#0"
      ]
    },
    "2354": {
      "op": "dig 9",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "newTotalDisb#0 (copy)",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%39#0",
        "totalCollateral#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "tmp%39#0",
        "newTotalDisb#0 (copy)"
      ]
    },
    "2356": {
      "op": "itob",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%39#0",
        "totalCollateral#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "tmp%39#0",
        "val_as_bytes%0#0"
      ]
    },
    "2357": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%39#0"
      ]
    },
    "2358": {
      "op": "dig 1",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%39#0",
        "totalCollateral#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%39#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2360": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%40#0",
        "totalCollateral#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%40#0"
      ]
    },
    "2361": {
      "op": "bytec 10 // \":\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%40#0",
        "\":\""
      ]
    },
    "2363": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%41#0",
        "totalCollateral#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%41#0"
      ]
    },
    "2364": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%41#0",
        "to_encode%0#0",
        "totalCollateral#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%41#0",
        "to_encode%0#0"
      ]
    },
    "2366": {
      "op": "itob",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%41#0",
        "totalCollateral#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%41#0",
        "val_as_bytes%1#0"
      ]
    },
    "2367": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "newDebt#0",
        "newTotalDisb#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "totalCollateral#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%3%%param_ConfigAssetURL_idx_0#0"
      ]
    },
    "2368": {
      "op": "itxn_field ConfigAssetURL",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2370": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "2371": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2373": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%3%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "2374": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2376": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%3%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "2377": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2379": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%3%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "2380": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2382": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%3%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2383": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2385": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "2386": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "newTotalDisb#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2388": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "val_as_bytes%0#0",
        "newTotalDisb#0"
      ]
    },
    "2390": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2392": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%3%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "2393": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2395": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "inner_txn_params%3%%param_ConfigAssetName_idx_0#0"
      ]
    },
    "2396": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "inner_txn_params%3%%param_Sender_idx_0#0",
        "tmp%31#0",
        "val_as_bytes%0#0"
      ]
    },
    "2398": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "inner_txn_params%3%%param_Sender_idx_0#0"
      ]
    },
    "2400": {
      "op": "itxn_field Sender",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "tmp%31#0",
        "val_as_bytes%0#0"
      ]
    },
    "2402": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "3"
      ]
    },
    "2404": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "tmp%31#0",
        "val_as_bytes%0#0"
      ]
    },
    "2406": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "2407": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "tmp%31#0",
        "val_as_bytes%0#0"
      ]
    },
    "2409": {
      "op": "itxn_submit"
    },
    "2410": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "totalCollateral#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0"
      ]
    },
    "2412": {
      "op": "dig 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "old#0 (copy)"
      ]
    },
    "2414": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%42#0",
        "totalCollateral#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "totalCollateral#0",
        "newDebt#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "tmp%42#0"
      ]
    },
    "2417": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "newDebt#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "tmp%42#0",
        "totalCollateral#0"
      ]
    },
    "2419": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "collateralDeposit#0",
        "disbursement#0",
        "newDebt#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%42#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "newDebt#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "tmp%42#0",
        "val_as_bytes%2#0"
      ]
    },
    "2420": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "tmp%42#0",
        "val_as_bytes%2#0",
        "newDebt#0"
      ]
    },
    "2422": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "collateralDeposit#0",
        "disbursement#0",
        "old#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%42#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "old#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "tmp%42#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0"
      ]
    },
    "2423": {
      "op": "uncover 6",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "tmp%42#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "old#0"
      ]
    },
    "2425": {
      "error": "Index access is out of bounds",
      "op": "extract 64 8 // on error: Index access is out of bounds",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%42#0",
        "tmp%44#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "tmp%42#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "tmp%44#0"
      ]
    },
    "2428": {
      "op": "uncover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "tmp%42#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "tmp%44#0",
        "asset.CreatedAssetID#0"
      ]
    },
    "2430": {
      "op": "itob",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%42#0",
        "tmp%44#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "tmp%42#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "tmp%44#0",
        "val_as_bytes%5#0"
      ]
    },
    "2431": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%42#0",
        "tmp%44#0",
        "to_encode%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "tmp%42#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "tmp%44#0",
        "val_as_bytes%5#0",
        "to_encode%1#0"
      ]
    },
    "2433": {
      "op": "itob",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%31#0",
        "tmp%42#0",
        "tmp%44#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "tmp%42#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "tmp%44#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "2434": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%31#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "tmp%44#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "tmp%42#0"
      ]
    },
    "2436": {
      "op": "uncover 7",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "tmp%44#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "tmp%42#0",
        "tmp%31#0"
      ]
    },
    "2438": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%2#0",
        "scaledDown#0",
        "tmp%44#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%4#0",
        "tmp%44#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2439": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%4#0",
        "tmp%44#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0"
      ]
    },
    "2441": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%3#0",
        "scaledDown#0",
        "tmp%44#0",
        "val_as_bytes%0#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%0#0",
        "val_as_bytes%4#0",
        "tmp%44#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2442": {
      "op": "uncover 5",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%4#0",
        "tmp%44#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%0#0"
      ]
    },
    "2444": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%4#0",
        "scaledDown#0",
        "tmp%44#0",
        "val_as_bytes%4#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%4#0",
        "tmp%44#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2445": {
      "op": "uncover 4",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%44#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%4#0"
      ]
    },
    "2447": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%5#0",
        "scaledDown#0",
        "tmp%44#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%44#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2448": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%5#0",
        "tmp%44#0"
      ]
    },
    "2450": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%6#0",
        "scaledDown#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2451": {
      "op": "uncover 2",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%5#0"
      ]
    },
    "2453": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%7#0",
        "scaledDown#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2454": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%6#0"
      ]
    },
    "2455": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%8#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2456": {
      "op": "bytec_2 // \"loan_record\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%8#0",
        "\"loan_record\""
      ]
    },
    "2457": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%8#0",
        "scaledDown#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%8#0",
        "\"loan_record\"",
        "tmp%45#0"
      ]
    },
    "2459": {
      "op": "concat",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "encoded_tuple_buffer%8#0",
        "scaledDown#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "encoded_tuple_buffer%8#0",
        "tmp%46#0"
      ]
    },
    "2460": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "tmp%46#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2461": {
      "op": "box_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0"
      ]
    },
    "2462": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "0"
      ]
    },
    "2463": {
      "op": "bytec 4 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "2465": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2466": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "maybe_value%7#0"
      ]
    },
    "2467": {
      "op": "intc_1 // 1",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "maybe_value%7#0",
        "1"
      ]
    },
    "2468": {
      "op": "+",
      "defined_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "new_state_value%1#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "new_state_value%1#0"
      ]
    },
    "2469": {
      "op": "bytec 4 // \"active_loan_records\"",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "new_state_value%1#0",
        "\"active_loan_records\""
      ]
    },
    "2471": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "\"active_loan_records\"",
        "new_state_value%1#0"
      ]
    },
    "2472": {
      "op": "app_global_put",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0"
      ]
    },
    "2473": {
      "op": "frame_dig -1",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralDeposit#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2475": {
      "op": "swap",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "collateralTokenId#0 (copy)",
        "collateralDeposit#0"
      ]
    },
    "2476": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.updateCollateralTotal",
      "op": "callsub updateCollateralTotal",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2479": {
      "block": "borrow_after_if_else@7",
      "stack_in": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ],
      "op": "itxn_begin"
    },
    "2480": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2482": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "2483": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2484": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0",
        "maybe_exists%8#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2485": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0",
        "maybe_value%8#0"
      ]
    },
    "2486": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%4%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%4%%param_XferAsset_idx_0#0"
      ]
    },
    "2487": {
      "op": "frame_dig 2",
      "defined_out": [
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%4%%param_XferAsset_idx_0#0",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%4%%param_XferAsset_idx_0#0",
        "scaledDown#0"
      ]
    },
    "2489": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%4%%param_XferAsset_idx_0#0"
      ]
    },
    "2491": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "inner_txn_params%4%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2493": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2495": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "scaledDown#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "4"
      ]
    },
    "2496": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2498": {
      "op": "intc_0 // 0",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "0"
      ]
    },
    "2499": {
      "op": "itxn_field Fee",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2501": {
      "op": "itxn_submit"
    },
    "2502": {
      "retsub": true,
      "op": "retsub"
    },
    "2503": {
      "block": "borrow_else_body@6",
      "stack_in": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "requestedLoanAmount#0 (copy)"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "maxBorrowUSD#0",
        "requestedLoanAmount#0 (copy)"
      ]
    },
    "2505": {
      "op": ">=",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%47#0"
      ]
    },
    "2506": {
      "error": "exceeds LTV limit",
      "op": "assert // exceeds LTV limit",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2507": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%48#0"
      ]
    },
    "2509": {
      "op": "frame_dig 2",
      "defined_out": [
        "scaledDown#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%48#0",
        "scaledDown#0"
      ]
    },
    "2511": {
      "op": "frame_dig 1",
      "defined_out": [
        "disbursement#0",
        "scaledDown#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%48#0",
        "scaledDown#0",
        "disbursement#0"
      ]
    },
    "2513": {
      "op": "frame_dig -1",
      "defined_out": [
        "collateralTokenId#0 (copy)",
        "disbursement#0",
        "scaledDown#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "tmp%48#0",
        "scaledDown#0",
        "disbursement#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2515": {
      "op": "uncover 3",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "scaledDown#0",
        "disbursement#0",
        "collateralTokenId#0 (copy)",
        "tmp%48#0"
      ]
    },
    "2517": {
      "op": "frame_dig 0",
      "defined_out": [
        "collateralDeposit#0",
        "collateralTokenId#0 (copy)",
        "disbursement#0",
        "scaledDown#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0",
        "scaledDown#0",
        "disbursement#0",
        "collateralTokenId#0 (copy)",
        "tmp%48#0",
        "collateralDeposit#0"
      ]
    },
    "2519": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.mintLoanRecord",
      "op": "callsub mintLoanRecord",
      "stack_out": [
        "collateralDeposit#0",
        "disbursement#0",
        "scaledDown#0"
      ]
    },
    "2522": {
      "op": "b borrow_after_if_else@7"
    },
    "2525": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.mintLoanRecord",
      "params": {
        "scaledDownDisbursement#0": "uint64",
        "disbursement#0": "uint64",
        "collateralTokenId#0": "bytes",
        "borrowerAddress#0": "bytes",
        "collateralAmount#0": "uint64"
      },
      "block": "mintLoanRecord",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "2528": {
      "op": "itxn_begin"
    },
    "2529": {
      "op": "pushbytes \"r\"",
      "defined_out": [
        "\"r\""
      ],
      "stack_out": [
        "\"r\""
      ]
    },
    "2532": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"r\"",
        "collateralTokenId#0 (copy)"
      ],
      "stack_out": [
        "\"r\"",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2534": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2535": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2536": {
      "op": "pushbytes \"b\"",
      "defined_out": [
        "\"b\"",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "\"b\""
      ]
    },
    "2539": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2540": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "0"
      ]
    },
    "2541": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2542": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2543": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "maybe_value%0#0"
      ]
    },
    "2544": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0"
      ]
    },
    "2545": {
      "op": "frame_dig -2",
      "defined_out": [
        "borrowerAddress#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "borrowerAddress#0 (copy)"
      ]
    },
    "2547": {
      "op": "bytec 10 // \":\"",
      "defined_out": [
        "\":\"",
        "borrowerAddress#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "borrowerAddress#0 (copy)",
        "\":\""
      ]
    },
    "2549": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%2#0"
      ]
    },
    "2550": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%2#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2552": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%3#0"
      ]
    },
    "2553": {
      "op": "bytec 10 // \":\"",
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%3#0",
        "\":\""
      ]
    },
    "2555": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%4#0"
      ]
    },
    "2556": {
      "op": "frame_dig -5",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "scaledDownDisbursement#0 (copy)",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%4#0",
        "scaledDownDisbursement#0 (copy)"
      ]
    },
    "2558": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#0",
        "tmp%4#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "2559": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%4#0"
      ]
    },
    "2560": {
      "op": "dig 1",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#0",
        "tmp%4#0",
        "val_as_bytes%0#0",
        "val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%4#0",
        "val_as_bytes%0#0 (copy)"
      ]
    },
    "2562": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#0",
        "tmp%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%5#0"
      ]
    },
    "2563": {
      "op": "bytec 10 // \":\"",
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%5#0",
        "\":\""
      ]
    },
    "2565": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%6#0"
      ]
    },
    "2566": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#0",
        "tmp%6#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "2568": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "tmp%0#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "tmp%6#0",
        "val_as_bytes%1#0"
      ]
    },
    "2569": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0"
      ]
    },
    "2570": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2572": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2573": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "2574": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2575": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2576": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0"
      ]
    },
    "2577": {
      "op": "uncover 6",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ]
    },
    "2579": {
      "op": "swap",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "2580": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "2581": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "2583": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "2584": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "0"
      ]
    },
    "2585": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "2587": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "2589": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "2591": {
      "op": "frame_dig -2",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0",
        "borrowerAddress#0 (copy)"
      ]
    },
    "2593": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetUnitName_idx_0#0"
      ]
    },
    "2595": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "2597": {
      "op": "itxn_field Sender",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2599": {
      "op": "frame_dig -4",
      "defined_out": [
        "disbursement#0 (copy)",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "disbursement#0 (copy)"
      ]
    },
    "2601": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2603": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "0"
      ]
    },
    "2604": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "2606": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetURL_idx_0#0"
      ]
    },
    "2608": {
      "op": "itxn_field ConfigAssetURL",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0",
        "val_as_bytes%0#0"
      ]
    },
    "2610": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%0#0",
        "inner_txn_params%0%%param_ConfigAssetName_idx_0#0"
      ]
    },
    "2611": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "2613": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "3"
      ]
    },
    "2615": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "2617": {
      "op": "intc_0 // 0",
      "stack_out": [
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "2618": {
      "op": "itxn_field Fee",
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "2620": {
      "op": "itxn_submit"
    },
    "2621": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0"
      ]
    },
    "2623": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "collateralAmount#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "2625": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0"
      ]
    },
    "2626": {
      "op": "frame_dig -4",
      "stack_out": [
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "disbursement#0 (copy)"
      ]
    },
    "2628": {
      "op": "itob",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "2629": {
      "op": "intc_0 // 0",
      "stack_out": [
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0"
      ]
    },
    "2630": {
      "op": "bytec_0 // \"base_token_id\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2631": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asset.CreatedAssetID#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2632": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "val_as_bytes%0#0",
        "asset.CreatedAssetID#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#0"
      ]
    },
    "2633": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#0",
        "asset.CreatedAssetID#0"
      ]
    },
    "2635": {
      "op": "itob",
      "defined_out": [
        "maybe_value%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#0",
        "val_as_bytes%5#0"
      ]
    },
    "2636": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "maybe_value%2#0",
        "to_encode%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#0",
        "val_as_bytes%5#0",
        "to_encode%1#0"
      ]
    },
    "2638": {
      "op": "itob",
      "defined_out": [
        "maybe_value%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ]
    },
    "2639": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "borrowerAddress#0 (copy)"
      ]
    },
    "2641": {
      "op": "frame_dig -3",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "borrowerAddress#0 (copy)",
        "collateralTokenId#0 (copy)"
      ]
    },
    "2643": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "maybe_value%2#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2644": {
      "op": "uncover 5",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%3#0",
        "maybe_value%2#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0"
      ]
    },
    "2646": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%3#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%3#0",
        "maybe_value%2#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2647": {
      "op": "uncover 4",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%3#0"
      ]
    },
    "2649": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%2#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2650": {
      "op": "uncover 4",
      "stack_out": [
        "maybe_value%2#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "2652": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "maybe_value%2#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2653": {
      "op": "uncover 3",
      "stack_out": [
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%5#0",
        "maybe_value%2#0"
      ]
    },
    "2655": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%5#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2656": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%6#0",
        "val_as_bytes%5#0"
      ]
    },
    "2658": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "val_as_bytes%6#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2659": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%6#0"
      ]
    },
    "2660": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0"
      ]
    },
    "2661": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "\"loan_record\""
      ]
    },
    "2662": {
      "op": "frame_dig -2",
      "stack_out": [
        "loanRecord#0",
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ]
    },
    "2664": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "tmp%8#0"
      ]
    },
    "2665": {
      "op": "swap",
      "stack_out": [
        "tmp%8#0",
        "loanRecord#0"
      ]
    },
    "2666": {
      "op": "box_put",
      "stack_out": []
    },
    "2667": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2668": {
      "op": "bytec 4 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"active_loan_records\""
      ]
    },
    "2670": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2671": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "2672": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "1"
      ]
    },
    "2673": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "2674": {
      "op": "bytec 4 // \"active_loan_records\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "2676": {
      "op": "swap",
      "stack_out": [
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "2677": {
      "op": "app_global_put",
      "stack_out": []
    },
    "2678": {
      "retsub": true,
      "op": "retsub"
    },
    "2679": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.claimLoanRecordASA",
      "params": {
        "debtor#0": "bytes",
        "assetId#0": "uint64"
      },
      "block": "claimLoanRecordASA",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2682": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "2683": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "2685": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2686": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2687": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2688": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2690": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2691": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2693": {
      "op": "frame_dig -1",
      "defined_out": [
        "assetId#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "assetId#0 (copy)"
      ]
    },
    "2695": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "assetExists#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "assetExists#0"
      ]
    },
    "2697": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "assetExists#0"
      ]
    },
    "2699": {
      "error": "Loan record ASA does not exist",
      "op": "assert // Loan record ASA does not exist",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2700": {
      "op": "box_get",
      "defined_out": [
        "loanRecord#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "loanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "2701": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%1#0"
      ]
    },
    "2703": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": []
    },
    "2704": {
      "op": "itxn_begin"
    },
    "2705": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2706": {
      "op": "itxn_field AssetAmount",
      "stack_out": []
    },
    "2708": {
      "op": "frame_dig -1",
      "stack_out": [
        "assetId#0 (copy)"
      ]
    },
    "2710": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "2712": {
      "op": "frame_dig -2",
      "stack_out": [
        "debtor#0 (copy)"
      ]
    },
    "2714": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "2716": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "2717": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2719": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "2720": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2722": {
      "op": "itxn_submit"
    },
    "2723": {
      "op": "itxn_begin"
    },
    "2724": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2726": {
      "op": "frame_dig -2",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "debtor#0 (copy)"
      ]
    },
    "2728": {
      "op": "itxn_field AssetCloseTo",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2730": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "2731": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2733": {
      "op": "frame_dig -1",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "assetId#0 (copy)"
      ]
    },
    "2735": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "2737": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "2739": {
      "op": "intc_2 // 4",
      "stack_out": [
        "4"
      ]
    },
    "2740": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2742": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2743": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2745": {
      "op": "itxn_submit"
    },
    "2746": {
      "retsub": true,
      "op": "retsub"
    },
    "2747": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.accrueInterest",
      "params": {
        "record#0": "bytes"
      },
      "block": "accrueInterest",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "2750": {
      "op": "global LatestTimestamp"
    },
    "2752": {
      "op": "dup"
    },
    "2753": {
      "op": "frame_dig -1"
    },
    "2755": {
      "op": "pushint 80 // 80",
      "defined_out": [
        "80",
        "now#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "now#0",
        "record#0 (copy)",
        "80"
      ]
    },
    "2757": {
      "op": "extract_uint64",
      "defined_out": [
        "last#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "now#0",
        "last#0"
      ]
    },
    "2758": {
      "op": "dup",
      "stack_out": [
        "now#0",
        "now#0",
        "last#0",
        "last#0"
      ]
    },
    "2759": {
      "op": "cover 2",
      "defined_out": [
        "last#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "last#0"
      ]
    },
    "2761": {
      "op": "<=",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%1#0"
      ]
    },
    "2762": {
      "op": "bz accrueInterest_after_if_else@2",
      "stack_out": [
        "now#0",
        "last#0"
      ]
    },
    "2765": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "record#0 (copy)"
      ]
    },
    "2767": {
      "op": "dup",
      "stack_out": [
        "now#0",
        "last#0",
        "record#0 (copy)",
        "record#0 (copy)"
      ]
    },
    "2768": {
      "op": "uncover 3"
    },
    "2770": {
      "op": "uncover 3"
    },
    "2772": {
      "retsub": true,
      "op": "retsub"
    },
    "2773": {
      "block": "accrueInterest_after_if_else@2",
      "stack_in": [
        "now#0",
        "last#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0"
      ]
    },
    "2775": {
      "op": "dup",
      "defined_out": [
        "now#0",
        "now#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "now#0 (copy)"
      ]
    },
    "2776": {
      "op": "frame_dig 1",
      "defined_out": [
        "last#0",
        "now#0",
        "now#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "now#0 (copy)",
        "last#0"
      ]
    },
    "2778": {
      "op": "-",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0"
      ]
    },
    "2779": {
      "op": "frame_dig -1",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "record#0 (copy)"
      ]
    },
    "2781": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "deltaT#0",
        "last#0",
        "now#0",
        "record#0 (copy)"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "record#0 (copy)",
        "56"
      ]
    },
    "2783": {
      "op": "extract_uint64",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0"
      ]
    },
    "2784": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "0"
      ]
    },
    "2785": {
      "op": "bytec 17 // \"interest_bps\"",
      "defined_out": [
        "\"interest_bps\"",
        "0",
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "0",
        "\"interest_bps\""
      ]
    },
    "2787": {
      "op": "app_global_get_ex",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "maybe_exists%0#0",
        "now#0",
        "principal#0",
        "rateBps#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "rateBps#0",
        "maybe_exists%0#0"
      ]
    },
    "2788": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "rateBps#0"
      ]
    },
    "2789": {
      "op": "dig 1",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0",
        "principal#0 (copy)",
        "rateBps#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "rateBps#0",
        "principal#0 (copy)"
      ]
    },
    "2791": {
      "op": "mulw",
      "defined_out": [
        "deltaT#0",
        "hi1#0",
        "last#0",
        "lo1#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "hi1#0",
        "lo1#0"
      ]
    },
    "2792": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "deltaT#0",
        "hi1#0",
        "last#0",
        "lo1#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "hi1#0",
        "lo1#0",
        "10000"
      ]
    },
    "2793": {
      "op": "divw",
      "defined_out": [
        "deltaT#0",
        "last#0",
        "now#0",
        "principal#0",
        "rateScaled#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "deltaT#0",
        "principal#0",
        "rateScaled#0"
      ]
    },
    "2794": {
      "op": "uncover 2",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "rateScaled#0",
        "deltaT#0"
      ]
    },
    "2796": {
      "op": "mulw",
      "defined_out": [
        "hi2#0",
        "last#0",
        "lo2#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "hi2#0",
        "lo2#0"
      ]
    },
    "2797": {
      "op": "pushint 31536000 // 31536000",
      "defined_out": [
        "31536000",
        "hi2#0",
        "last#0",
        "lo2#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "hi2#0",
        "lo2#0",
        "31536000"
      ]
    },
    "2802": {
      "op": "divw",
      "defined_out": [
        "interest#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0"
      ]
    },
    "2803": {
      "op": "intc_0 // 0",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "0"
      ]
    },
    "2804": {
      "op": "bytec 19 // \"protocol_interest_fee_bps\"",
      "defined_out": [
        "\"protocol_interest_fee_bps\"",
        "0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "0",
        "\"protocol_interest_fee_bps\""
      ]
    },
    "2806": {
      "op": "app_global_get_ex",
      "defined_out": [
        "interest#0",
        "last#0",
        "maybe_exists%1#0",
        "now#0",
        "principal#0",
        "protoBps#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protoBps#0",
        "maybe_exists%1#0"
      ]
    },
    "2807": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protoBps#0"
      ]
    },
    "2808": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protoBps#0",
        "10000"
      ]
    },
    "2809": {
      "op": "swap",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "10000",
        "protoBps#0"
      ]
    },
    "2810": {
      "op": "-",
      "defined_out": [
        "depositorBps#0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorBps#0"
      ]
    },
    "2811": {
      "op": "dig 1",
      "defined_out": [
        "depositorBps#0",
        "interest#0",
        "interest#0 (copy)",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorBps#0",
        "interest#0 (copy)"
      ]
    },
    "2813": {
      "op": "mulw",
      "defined_out": [
        "hiDep#0",
        "interest#0",
        "last#0",
        "loDep#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "hiDep#0",
        "loDep#0"
      ]
    },
    "2814": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "hiDep#0",
        "loDep#0",
        "10000"
      ]
    },
    "2815": {
      "op": "divw",
      "defined_out": [
        "depositorInterest#0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0"
      ]
    },
    "2816": {
      "op": "dup2",
      "defined_out": [
        "depositorInterest#0",
        "depositorInterest#0 (copy)",
        "interest#0",
        "interest#0 (copy)",
        "last#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "interest#0 (copy)",
        "depositorInterest#0 (copy)"
      ]
    },
    "2817": {
      "op": "-",
      "defined_out": [
        "depositorInterest#0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0"
      ]
    },
    "2818": {
      "op": "intc_0 // 0",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0",
        "0"
      ]
    },
    "2819": {
      "op": "bytec_3 // \"total_deposits\"",
      "defined_out": [
        "\"total_deposits\"",
        "0",
        "depositorInterest#0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0",
        "0",
        "\"total_deposits\""
      ]
    },
    "2820": {
      "op": "app_global_get_ex",
      "defined_out": [
        "depositorInterest#0",
        "interest#0",
        "last#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2821": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "depositorInterest#0",
        "protocolInterest#0",
        "maybe_value%2#0"
      ]
    },
    "2822": {
      "op": "uncover 2",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "maybe_value%2#0",
        "depositorInterest#0"
      ]
    },
    "2824": {
      "op": "+",
      "defined_out": [
        "interest#0",
        "last#0",
        "new_state_value%0#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "new_state_value%0#0"
      ]
    },
    "2825": {
      "op": "bytec_3 // \"total_deposits\"",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "new_state_value%0#0",
        "\"total_deposits\""
      ]
    },
    "2826": {
      "op": "swap",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "\"total_deposits\"",
        "new_state_value%0#0"
      ]
    },
    "2827": {
      "op": "app_global_put",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0"
      ]
    },
    "2828": {
      "op": "intc_0 // 0",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "0"
      ]
    },
    "2829": {
      "op": "bytec 7 // \"fee_pool\"",
      "defined_out": [
        "\"fee_pool\"",
        "0",
        "interest#0",
        "last#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "0",
        "\"fee_pool\""
      ]
    },
    "2831": {
      "op": "app_global_get_ex",
      "defined_out": [
        "interest#0",
        "last#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "now#0",
        "principal#0",
        "protocolInterest#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2832": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "protocolInterest#0",
        "maybe_value%3#0"
      ]
    },
    "2833": {
      "op": "+",
      "defined_out": [
        "interest#0",
        "last#0",
        "new_state_value%1#0",
        "now#0",
        "principal#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "new_state_value%1#0"
      ]
    },
    "2834": {
      "op": "bytec 7 // \"fee_pool\"",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "new_state_value%1#0",
        "\"fee_pool\""
      ]
    },
    "2836": {
      "op": "swap",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0",
        "\"fee_pool\"",
        "new_state_value%1#0"
      ]
    },
    "2837": {
      "op": "app_global_put",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "principal#0",
        "interest#0"
      ]
    },
    "2838": {
      "op": "+",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0"
      ]
    },
    "2839": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "record#0 (copy)"
      ]
    },
    "2841": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0"
      ]
    },
    "2844": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "record#0 (copy)"
      ]
    },
    "2846": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "2849": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0",
        "record#0 (copy)"
      ]
    },
    "2851": {
      "error": "Index access is out of bounds",
      "op": "extract 40 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "2854": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "record#0 (copy)"
      ]
    },
    "2856": {
      "error": "Index access is out of bounds",
      "op": "extract 48 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "newPrincipal#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "newPrincipal#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "2859": {
      "op": "uncover 4",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "newPrincipal#0"
      ]
    },
    "2861": {
      "op": "itob",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0"
      ]
    },
    "2862": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "record#0 (copy)"
      ]
    },
    "2864": {
      "error": "Index access is out of bounds",
      "op": "extract 64 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0"
      ]
    },
    "2867": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "record#0 (copy)"
      ]
    },
    "2869": {
      "error": "Index access is out of bounds",
      "op": "extract 72 8 // on error: Index access is out of bounds",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2872": {
      "op": "uncover 7",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "now#0"
      ]
    },
    "2874": {
      "op": "itob",
      "defined_out": [
        "last#0",
        "now#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0"
      ]
    },
    "2875": {
      "op": "uncover 7",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "tmp%3#0"
      ]
    },
    "2877": {
      "op": "uncover 7",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "2879": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "last#0",
        "now#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%5#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2880": {
      "op": "uncover 6",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "tmp%5#0"
      ]
    },
    "2882": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "last#0",
        "now#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%6#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2883": {
      "op": "uncover 5",
      "stack_out": [
        "now#0",
        "last#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%3#0",
        "tmp%6#0"
      ]
    },
    "2885": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "last#0",
        "now#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "val_as_bytes%0#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2886": {
      "op": "uncover 4",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "2888": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "last#0",
        "now#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%7#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2889": {
      "op": "uncover 3",
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%5#0",
        "tmp%7#0"
      ]
    },
    "2891": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "last#0",
        "now#0",
        "tmp%8#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "tmp%8#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2892": {
      "op": "uncover 2",
      "stack_out": [
        "now#0",
        "last#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "tmp%8#0"
      ]
    },
    "2894": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "last#0",
        "now#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "2895": {
      "op": "swap",
      "stack_out": [
        "now#0",
        "last#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%1#0"
      ]
    },
    "2896": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "last#0",
        "now#0"
      ],
      "stack_out": [
        "now#0",
        "last#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "2897": {
      "op": "frame_dig -1",
      "stack_out": [
        "now#0",
        "last#0",
        "encoded_tuple_buffer%8#0",
        "record#0 (copy)"
      ]
    },
    "2899": {
      "op": "uncover 3"
    },
    "2901": {
      "op": "uncover 3"
    },
    "2903": {
      "retsub": true,
      "op": "retsub"
    },
    "2904": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getLoanRecord",
      "params": {
        "borrowerAddress#0": "bytes"
      },
      "block": "getLoanRecord",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2907": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "2908": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ]
    },
    "2910": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2911": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2912": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2913": {
      "retsub": true,
      "op": "retsub"
    },
    "2914": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getLoanRecordASAId",
      "params": {
        "borrowerAddress#0": "bytes"
      },
      "block": "getLoanRecordASAId",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "2917": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "2918": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "borrowerAddress#0 (copy)"
      ]
    },
    "2920": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2921": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2922": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "2923": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "72"
      ]
    },
    "2925": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2926": {
      "retsub": true,
      "op": "retsub"
    },
    "2927": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.repayLoan",
      "params": {
        "assetTransferTxn#0": "uint64",
        "amount#0": "uint64"
      },
      "block": "repayLoan",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2930": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "remainingDebt#0"
      ]
    },
    "2932": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "0"
      ]
    },
    "2933": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "2934": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2935": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "remainingDebt#0",
        "maybe_value%0#0"
      ]
    },
    "2936": {
      "op": "btoi",
      "defined_out": [
        "baseToken#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "2937": {
      "op": "frame_dig -2",
      "defined_out": [
        "assetTransferTxn#0 (copy)",
        "baseToken#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2939": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%0#0"
      ]
    },
    "2941": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "2943": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%2#0"
      ]
    },
    "2944": {
      "op": "bz repayLoan_bool_false@4",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "2947": {
      "op": "frame_dig -2",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2949": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "baseToken#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%3#0"
      ]
    },
    "2951": {
      "op": "frame_dig 1",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%3#0",
        "baseToken#0"
      ]
    },
    "2953": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%4#0"
      ]
    },
    "2954": {
      "op": "bz repayLoan_bool_false@4",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "2957": {
      "op": "frame_dig -2",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "assetTransferTxn#0 (copy)"
      ]
    },
    "2959": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%5#0"
      ]
    },
    "2961": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "baseToken#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%5#0",
        "amount#0 (copy)"
      ]
    },
    "2963": {
      "op": "==",
      "defined_out": [
        "baseToken#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%6#0"
      ]
    },
    "2964": {
      "op": "bz repayLoan_bool_false@4",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "2967": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "baseToken#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "2968": {
      "block": "repayLoan_bool_merge@5",
      "stack_in": [
        "remainingDebt#0",
        "baseToken#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "2969": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%7#0"
      ]
    },
    "2971": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getLoanRecord",
      "op": "callsub getLoanRecord",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "2974": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.accrueInterest",
      "op": "callsub accrueInterest",
      "defined_out": [
        "loanRecord#0",
        "loanRecord#1"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#1"
      ]
    },
    "2977": {
      "op": "pop",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "2978": {
      "op": "dup",
      "defined_out": [
        "loanRecord#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#0"
      ]
    },
    "2979": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#0",
        "\"loan_record\""
      ]
    },
    "2980": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#0",
        "\"loan_record\"",
        "tmp%8#0"
      ]
    },
    "2982": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#0",
        "tmp%9#0"
      ]
    },
    "2983": {
      "op": "dig 1",
      "defined_out": [
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#0",
        "tmp%9#0",
        "loanRecord#0 (copy)"
      ]
    },
    "2985": {
      "op": "box_put",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#0"
      ]
    },
    "2986": {
      "op": "txn Sender",
      "defined_out": [
        "loanRecord#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#0",
        "tmp%10#0"
      ]
    },
    "2988": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getLoanRecordASAId",
      "op": "callsub getLoanRecordASAId",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#0",
        "loanRecordASAId#0"
      ]
    },
    "2991": {
      "op": "swap",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "loanRecord#0"
      ]
    },
    "2992": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "loanRecord#0",
        "loanRecordASAId#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "loanRecord#0",
        "56"
      ]
    },
    "2994": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0"
      ]
    },
    "2995": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "amount#0 (copy)"
      ]
    },
    "2997": {
      "op": "dig 1",
      "defined_out": [
        "amount#0 (copy)",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "amount#0 (copy)",
        "tmp%11#0 (copy)"
      ]
    },
    "2999": {
      "op": "<=",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "3000": {
      "op": "assert",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0"
      ]
    },
    "3001": {
      "op": "frame_dig -1",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "tmp%11#0",
        "amount#0 (copy)"
      ]
    },
    "3003": {
      "op": "-",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ]
    },
    "3004": {
      "op": "dup",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "remainingDebt#0"
      ]
    },
    "3005": {
      "op": "frame_bury 0",
      "defined_out": [
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ]
    },
    "3007": {
      "op": "itxn_begin"
    },
    "3008": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "3010": {
      "op": "itxn_field Sender",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecordASAId#0",
        "remainingDebt#0"
      ]
    },
    "3012": {
      "op": "swap",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "remainingDebt#0",
        "loanRecordASAId#0"
      ]
    },
    "3013": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3015": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "remainingDebt#0",
        "3"
      ]
    },
    "3017": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3019": {
      "op": "intc_0 // 0",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "remainingDebt#0",
        "0"
      ]
    },
    "3020": {
      "op": "itxn_field Fee",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "remainingDebt#0"
      ]
    },
    "3022": {
      "op": "itxn_submit"
    },
    "3023": {
      "op": "bnz repayLoan_else_body@9",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "3026": {
      "op": "bytec_2 // \"loan_record\"",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "\"loan_record\""
      ]
    },
    "3027": {
      "op": "txn Sender",
      "defined_out": [
        "\"loan_record\"",
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "\"loan_record\"",
        "tmp%15#0"
      ]
    },
    "3029": {
      "op": "concat",
      "defined_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "tmp%16#0"
      ]
    },
    "3030": {
      "op": "box_del",
      "defined_out": [
        "loanRecord#0",
        "remainingDebt#0",
        "{box_del}"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "{box_del}"
      ]
    },
    "3031": {
      "op": "pop",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "3032": {
      "op": "intc_0 // 0",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "0"
      ]
    },
    "3033": {
      "op": "bytec 4 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "3035": {
      "op": "app_global_get_ex",
      "defined_out": [
        "loanRecord#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3036": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "maybe_value%1#0"
      ]
    },
    "3037": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "loanRecord#0",
        "maybe_value%1#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "maybe_value%1#0",
        "1"
      ]
    },
    "3038": {
      "op": "-",
      "defined_out": [
        "loanRecord#0",
        "new_state_value%0#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "new_state_value%0#0"
      ]
    },
    "3039": {
      "op": "bytec 4 // \"active_loan_records\"",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "3041": {
      "op": "swap",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "3042": {
      "op": "app_global_put",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ]
    },
    "3043": {
      "op": "itxn_begin"
    },
    "3044": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3046": {
      "op": "swap",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0"
      ]
    },
    "3047": {
      "op": "dup",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3048": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "32"
      ]
    },
    "3050": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "loanRecord#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "3051": {
      "op": "swap",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0"
      ]
    },
    "3052": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "loanRecord#0",
        "40"
      ]
    },
    "3054": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "3055": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "3057": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3059": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3061": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "remainingDebt#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "4"
      ]
    },
    "3062": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3064": {
      "op": "intc_0 // 0",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "0"
      ]
    },
    "3065": {
      "op": "itxn_field Fee",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3067": {
      "op": "itxn_submit"
    },
    "3068": {
      "retsub": true,
      "op": "retsub"
    },
    "3069": {
      "block": "repayLoan_else_body@9",
      "stack_in": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0"
      ],
      "op": "dup",
      "defined_out": [
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3070": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "loanRecord#0",
        "loanRecord#0 (copy)"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "loanRecord#0 (copy)",
        "48"
      ]
    },
    "3072": {
      "op": "extract_uint64",
      "defined_out": [
        "loanRecord#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "tmp%20#0"
      ]
    },
    "3073": {
      "op": "dig 1",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "tmp%20#0",
        "loanRecord#0 (copy)"
      ]
    },
    "3075": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "3078": {
      "op": "txn Sender",
      "defined_out": [
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "3080": {
      "op": "uncover 3",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "loanRecord#0"
      ]
    },
    "3082": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "loanRecord#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "loanRecord#0",
        "40"
      ]
    },
    "3084": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ]
    },
    "3085": {
      "op": "frame_dig 0",
      "defined_out": [
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0",
        "remainingDebt#0"
      ]
    },
    "3087": {
      "op": "cover 4",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "remainingDebt#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%24#0"
      ]
    },
    "3089": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.mintLoanRecord",
      "op": "callsub mintLoanRecord",
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0"
      ]
    },
    "3092": {
      "retsub": true,
      "op": "retsub"
    },
    "3093": {
      "block": "repayLoan_bool_false@4",
      "stack_in": [
        "remainingDebt#0",
        "baseToken#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "remainingDebt#0",
        "baseToken#0",
        "and_result%0#0"
      ]
    },
    "3094": {
      "op": "b repayLoan_bool_merge@5"
    },
    "3097": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.withdrawFees",
      "params": {},
      "block": "withdrawFees",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3099": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "3100": {
      "op": "bytec 6 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "3102": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3103": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "3104": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3105": {
      "op": "assert",
      "stack_out": []
    },
    "3106": {
      "op": "itxn_begin"
    },
    "3107": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3108": {
      "op": "bytec 6 // \"admin_account\"",
      "stack_out": [
        "0",
        "\"admin_account\""
      ]
    },
    "3110": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3111": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "3112": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "0"
      ]
    },
    "3113": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "3114": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3115": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "3116": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "3117": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0"
      ]
    },
    "3118": {
      "op": "bytec 7 // \"fee_pool\"",
      "defined_out": [
        "\"fee_pool\"",
        "0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0",
        "\"fee_pool\""
      ]
    },
    "3120": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_exists%3#0",
        "maybe_value%1#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3121": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_value%3#0"
      ]
    },
    "3122": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "maybe_value%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "3124": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "3126": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "3128": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "3129": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3131": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3132": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3134": {
      "op": "itxn_submit"
    },
    "3135": {
      "op": "bytec 7 // \"fee_pool\"",
      "stack_out": [
        "\"fee_pool\""
      ]
    },
    "3137": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"fee_pool\"",
        "0"
      ]
    },
    "3138": {
      "op": "app_global_put",
      "stack_out": []
    },
    "3139": {
      "retsub": true,
      "op": "retsub"
    },
    "3140": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.accrueLoanInterest",
      "params": {
        "debtor#0": "bytes"
      },
      "block": "accrueLoanInterest",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3143": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "\"loan_record\""
      ]
    },
    "3144": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "3146": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3147": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3149": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3150": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3152": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "3153": {
      "op": "box_get",
      "defined_out": [
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "3154": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3155": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.accrueInterest",
      "op": "callsub accrueInterest",
      "defined_out": [
        "accrueInterest%0#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "accrueInterest%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3158": {
      "op": "bury 1",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3160": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "debtor#0 (copy)"
      ]
    },
    "3162": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getLoanRecordASAId",
      "op": "callsub getLoanRecordASAId",
      "defined_out": [
        "currentLoanRecord#0",
        "currentLoanRecordASAId#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecordASAId#0"
      ]
    },
    "3165": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "currentLoanRecord#0",
        "currentLoanRecordASAId#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecordASAId#0",
        "tmp%2#0"
      ]
    },
    "3167": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%2#0",
        "currentLoanRecordASAId#0"
      ]
    },
    "3168": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "assetExists#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%3#0",
        "assetExists#0"
      ]
    },
    "3170": {
      "op": "bury 1",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "assetExists#0"
      ]
    },
    "3172": {
      "op": "bnz accrueLoanInterest_after_if_else@3",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3175": {
      "op": "itxn_begin"
    },
    "3176": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3178": {
      "op": "frame_dig 1",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "currentLoanRecord#0"
      ]
    },
    "3180": {
      "op": "dup",
      "defined_out": [
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3181": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "72"
      ]
    },
    "3183": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "3184": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "currentLoanRecord#0"
      ]
    },
    "3185": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "currentLoanRecord#0",
        "56"
      ]
    },
    "3187": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0"
      ]
    },
    "3188": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "3190": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "debtor#0 (copy)"
      ]
    },
    "3192": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "3194": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3196": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3198": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "4"
      ]
    },
    "3199": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3201": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "0"
      ]
    },
    "3202": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3204": {
      "op": "itxn_submit"
    },
    "3205": {
      "block": "accrueLoanInterest_after_if_else@3",
      "stack_in": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ],
      "op": "itxn_begin"
    },
    "3206": {
      "op": "frame_dig 1",
      "defined_out": [
        "currentLoanRecord#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0"
      ]
    },
    "3208": {
      "op": "dup",
      "defined_out": [
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3209": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "72"
      ]
    },
    "3211": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%1%%param_ConfigAsset_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "inner_txn_params%1%%param_ConfigAsset_idx_0#0"
      ]
    },
    "3212": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%1%%param_ConfigAsset_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "inner_txn_params%1%%param_ConfigAsset_idx_0#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "3214": {
      "op": "itxn_field Sender",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "inner_txn_params%1%%param_ConfigAsset_idx_0#0"
      ]
    },
    "3216": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0"
      ]
    },
    "3218": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "currentLoanRecord#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "3"
      ]
    },
    "3220": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0"
      ]
    },
    "3222": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "currentLoanRecord#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "0"
      ]
    },
    "3223": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0"
      ]
    },
    "3225": {
      "op": "itxn_submit"
    },
    "3226": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3227": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "56"
      ]
    },
    "3229": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%9#0"
      ]
    },
    "3230": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%9#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3232": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%9#0",
        "currentLoanRecord#0 (copy)",
        "48"
      ]
    },
    "3234": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "3235": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%9#0",
        "tmp%11#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3237": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "3240": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%12#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3242": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%12#0",
        "currentLoanRecord#0 (copy)",
        "40"
      ]
    },
    "3244": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "3245": {
      "op": "cover 3",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%14#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "3247": {
      "op": "frame_dig -1",
      "defined_out": [
        "currentLoanRecord#0",
        "debtor#0 (copy)",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%14#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%12#0",
        "debtor#0 (copy)"
      ]
    },
    "3249": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%9#0",
        "tmp%11#0",
        "tmp%12#0",
        "debtor#0 (copy)",
        "tmp%14#0"
      ]
    },
    "3251": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.mintLoanRecord",
      "op": "callsub mintLoanRecord",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0"
      ]
    },
    "3254": {
      "op": "frame_dig 0",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ]
    },
    "3256": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3257": {
      "op": "box_put",
      "stack_out": [
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3258": {
      "retsub": true,
      "op": "retsub"
    },
    "3259": {
      "subroutine": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.buyout",
      "params": {
        "buyer#0": "bytes",
        "debtor#0": "bytes",
        "axferTxn#0": "uint64"
      },
      "block": "buyout",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3262": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "3264": {
      "op": "bytec_2 // \"loan_record\"",
      "defined_out": [
        "\"loan_record\""
      ],
      "stack_out": [
        "tmp%26#0",
        "\"loan_record\""
      ]
    },
    "3265": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"loan_record\"",
        "debtor#0 (copy)"
      ],
      "stack_out": [
        "tmp%26#0",
        "\"loan_record\"",
        "debtor#0 (copy)"
      ]
    },
    "3267": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0"
      ]
    },
    "3268": {
      "op": "dupn 2",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3270": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3271": {
      "op": "bury 1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3273": {
      "error": "Loan record does not exist",
      "op": "assert // Loan record does not exist",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "3274": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3275": {
      "op": "box_get",
      "defined_out": [
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "3276": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "currentLoanRecord#0"
      ]
    },
    "3277": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "maybe_exists%1#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3278": {
      "op": "cover 2",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "currentLoanRecord#0"
      ]
    },
    "3280": {
      "op": "cover 3",
      "defined_out": [
        "currentLoanRecord#0",
        "maybe_exists%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "maybe_exists%1#0"
      ]
    },
    "3282": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0"
      ]
    },
    "3283": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ]
    },
    "3284": {
      "op": "dig 1",
      "defined_out": [
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "tmp%0#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3286": {
      "op": "box_put",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0"
      ]
    },
    "3287": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3288": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "40"
      ]
    },
    "3290": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "collateralAmount#0"
      ]
    },
    "3291": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3292": {
      "op": "uncover 2",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0"
      ]
    },
    "3294": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)"
      ]
    },
    "3295": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "currentLoanRecord#0 (copy)",
        "56"
      ]
    },
    "3297": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0"
      ]
    },
    "3298": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "debtAmount#0 (copy)"
      ]
    },
    "3299": {
      "op": "cover 3",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0"
      ]
    },
    "3301": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0"
      ]
    },
    "3303": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "currentLoanRecord#0",
        "32"
      ]
    },
    "3305": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "to_encode%0#0"
      ]
    },
    "3306": {
      "op": "itob",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "3307": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralTokenId#0"
      ]
    },
    "3308": {
      "op": "cover 3",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "collateralTokenId#0"
      ]
    },
    "3310": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getCollateral",
      "op": "callsub getCollateral",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "3313": {
      "op": "dup",
      "defined_out": [
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)"
      ]
    },
    "3314": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "acceptedCollateral#0 (copy)",
        "16"
      ]
    },
    "3316": {
      "op": "extract_uint64",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0"
      ]
    },
    "3317": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "3318": {
      "op": "cover 4",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0"
      ]
    },
    "3320": {
      "op": "dig 2",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%7#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3322": {
      "op": ">=",
      "defined_out": [
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "tmp%8#0"
      ]
    },
    "3323": {
      "error": "Collateral amount exceeds current total",
      "op": "assert // Collateral amount exceeds current total",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0"
      ]
    },
    "3324": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "acceptedCollateral#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "acceptedCollateral#0",
        "8"
      ]
    },
    "3326": {
      "op": "extract_uint64",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%10#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "tmp%10#0"
      ]
    },
    "3327": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.getPricesFromOracles",
      "op": "callsub getPricesFromOracles",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "oraclePrice#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralAmount#0",
        "oraclePrice#0"
      ]
    },
    "3330": {
      "op": "mulw",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "hU#0",
        "lU#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "hU#0",
        "lU#0"
      ]
    },
    "3331": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "hU#0",
        "lU#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "hU#0",
        "lU#0",
        "1"
      ]
    },
    "3332": {
      "op": "divw",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralUSD#0"
      ]
    },
    "3333": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "collateralUSD#0 (copy)",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "debtAmount#0",
        "collateralUSD#0",
        "collateralUSD#0 (copy)"
      ]
    },
    "3334": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "collateralUSD#0 (copy)",
        "debtAmount#0"
      ]
    },
    "3336": {
      "op": "/",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0"
      ]
    },
    "3337": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "0"
      ]
    },
    "3338": {
      "op": "bytec 14 // \"liq_threshold_bps\"",
      "defined_out": [
        "\"liq_threshold_bps\"",
        "0",
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "3340": {
      "op": "app_global_get_ex",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3341": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "maybe_value%2#0"
      ]
    },
    "3342": {
      "op": "dig 1",
      "defined_out": [
        "CR#0",
        "CR#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "maybe_value%2#0",
        "CR#0 (copy)"
      ]
    },
    "3344": {
      "op": "<",
      "defined_out": [
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "tmp%11#0"
      ]
    },
    "3345": {
      "error": "loan is not eligible for buyout",
      "op": "assert // loan is not eligible for buyout",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0"
      ]
    },
    "3346": {
      "op": "intc_3 // 10000",
      "defined_out": [
        "10000",
        "CR#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "CR#0",
        "10000"
      ]
    },
    "3347": {
      "op": "*",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%12#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0"
      ]
    },
    "3348": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "0"
      ]
    },
    "3349": {
      "op": "bytec 14 // \"liq_threshold_bps\"",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "0",
        "\"liq_threshold_bps\""
      ]
    },
    "3351": {
      "op": "app_global_get_ex",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%0#0",
        "tmp%12#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3352": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%12#0",
        "maybe_value%3#0"
      ]
    },
    "3353": {
      "op": "/",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%13#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%13#0"
      ]
    },
    "3354": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%13#0",
        "10000"
      ]
    },
    "3355": {
      "op": "-",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "premiumRate#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "premiumRate#0"
      ]
    },
    "3356": {
      "op": "intc_3 // 10000",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "premiumRate#0",
        "10000"
      ]
    },
    "3357": {
      "op": "/",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%14#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%14#0"
      ]
    },
    "3358": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%14#0",
        "1"
      ]
    },
    "3359": {
      "op": "+",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "collateralUSD#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralUSD#0",
        "tmp%15#0"
      ]
    },
    "3360": {
      "op": "*",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3361": {
      "op": "frame_dig -1",
      "defined_out": [
        "axferTxn#0 (copy)",
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "axferTxn#0 (copy)"
      ]
    },
    "3363": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0"
      ]
    },
    "3365": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "0"
      ]
    },
    "3366": {
      "op": "bytec_0 // \"base_token_id\"",
      "defined_out": [
        "\"base_token_id\"",
        "0",
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "0",
        "\"base_token_id\""
      ]
    },
    "3367": {
      "op": "app_global_get_ex",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "3368": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "maybe_value%4#0"
      ]
    },
    "3369": {
      "op": "btoi",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "3370": {
      "op": "==",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%18#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%18#0"
      ]
    },
    "3371": {
      "op": "bz buyout_bool_false@4",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3374": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "axferTxn#0 (copy)"
      ]
    },
    "3376": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%19#0"
      ]
    },
    "3378": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "3380": {
      "op": "==",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%21#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%21#0"
      ]
    },
    "3381": {
      "op": "bz buyout_bool_false@4",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3384": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "axferTxn#0 (copy)"
      ]
    },
    "3386": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%22#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%22#0"
      ]
    },
    "3388": {
      "op": "frame_dig 7",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%22#0",
        "buyoutPrice#0"
      ]
    },
    "3390": {
      "op": "==",
      "defined_out": [
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%23#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%23#0"
      ]
    },
    "3391": {
      "op": "bz buyout_bool_false@4",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3394": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "buyoutPrice#0",
        "collateralAmount#0",
        "collateralTokenId#0",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "and_result%0#0"
      ]
    },
    "3395": {
      "block": "buyout_bool_merge@5",
      "stack_in": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3396": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0"
      ]
    },
    "3398": {
      "op": "frame_dig 2",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "currentLoanRecord#0"
      ]
    },
    "3400": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72",
        "currentLoanRecord#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "currentLoanRecord#0",
        "72"
      ]
    },
    "3402": {
      "op": "extract_uint64",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%24#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "tmp%26#0"
      ]
    },
    "3403": {
      "op": "dup",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "tmp%26#0",
        "tmp%26#0"
      ]
    },
    "3404": {
      "op": "frame_bury 0",
      "defined_out": [
        "currentLoanRecord#0",
        "tmp%24#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%24#0",
        "tmp%26#0"
      ]
    },
    "3406": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "assetExists#0",
        "currentLoanRecord#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%27#0",
        "assetExists#0"
      ]
    },
    "3408": {
      "op": "bury 1",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "assetExists#0"
      ]
    },
    "3410": {
      "op": "bnz buyout_after_if_else@8",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3413": {
      "op": "itxn_begin"
    },
    "3414": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "currentLoanRecord#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3416": {
      "op": "frame_dig 4",
      "defined_out": [
        "currentLoanRecord#0",
        "debtAmount#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "debtAmount#0"
      ]
    },
    "3418": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3420": {
      "op": "frame_dig -2",
      "defined_out": [
        "currentLoanRecord#0",
        "debtAmount#0",
        "debtor#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "debtor#0 (copy)"
      ]
    },
    "3422": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3424": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%26#0"
      ]
    },
    "3426": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "3428": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3430": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "currentLoanRecord#0",
        "debtAmount#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "4"
      ]
    },
    "3431": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3433": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0"
      ]
    },
    "3434": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3436": {
      "op": "itxn_submit"
    },
    "3437": {
      "block": "buyout_after_if_else@8",
      "stack_in": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ],
      "op": "itxn_begin"
    },
    "3438": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "3440": {
      "op": "itxn_field Sender",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3442": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%26#0"
      ]
    },
    "3444": {
      "op": "itxn_field ConfigAsset",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3446": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "3"
      ]
    },
    "3448": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3450": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0"
      ]
    },
    "3451": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3453": {
      "op": "itxn_submit"
    },
    "3454": {
      "op": "frame_dig 1",
      "defined_out": [
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "tmp%0#0"
      ]
    },
    "3456": {
      "op": "box_del",
      "defined_out": [
        "tmp%0#0",
        "tmp%26#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "{box_del}"
      ]
    },
    "3457": {
      "op": "pop",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3458": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0"
      ]
    },
    "3459": {
      "op": "bytec 4 // \"active_loan_records\"",
      "defined_out": [
        "\"active_loan_records\"",
        "0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "0",
        "\"active_loan_records\""
      ]
    },
    "3461": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "3462": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "maybe_value%5#0"
      ]
    },
    "3463": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%5#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "maybe_value%5#0",
        "1"
      ]
    },
    "3464": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "new_state_value%0#0"
      ]
    },
    "3465": {
      "op": "bytec 4 // \"active_loan_records\"",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "new_state_value%0#0",
        "\"active_loan_records\""
      ]
    },
    "3467": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "\"active_loan_records\"",
        "new_state_value%0#0"
      ]
    },
    "3468": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3469": {
      "op": "itxn_begin"
    },
    "3470": {
      "op": "frame_dig 5",
      "defined_out": [
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0"
      ]
    },
    "3472": {
      "op": "dup",
      "defined_out": [
        "collateralTokenId#0",
        "collateralTokenId#0 (copy)",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralTokenId#0 (copy)"
      ]
    },
    "3473": {
      "op": "btoi",
      "defined_out": [
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "3474": {
      "op": "frame_dig 3",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0"
      ]
    },
    "3476": {
      "op": "dup",
      "defined_out": [
        "collateralAmount#0",
        "collateralAmount#0 (copy)",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)",
        "collateralAmount#0 (copy)"
      ]
    },
    "3477": {
      "op": "cover 2",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "collateralAmount#0 (copy)"
      ]
    },
    "3479": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "3481": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "3483": {
      "op": "frame_dig -3",
      "defined_out": [
        "buyer#0 (copy)",
        "collateralAmount#0",
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "buyer#0 (copy)"
      ]
    },
    "3485": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "3487": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "collateralAmount#0",
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "4"
      ]
    },
    "3488": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "3490": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "0"
      ]
    },
    "3491": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0"
      ]
    },
    "3493": {
      "op": "itxn_submit"
    },
    "3494": {
      "op": "frame_dig 6",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "tmp%0#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "collateralAmount#0",
        "tmp%7#0"
      ]
    },
    "3496": {
      "op": "swap",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "collateralAmount#0"
      ]
    },
    "3497": {
      "op": "-",
      "defined_out": [
        "collateralAmount#0",
        "collateralTokenId#0",
        "newTotal#0",
        "tmp%0#0",
        "tmp%26#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "collateralTokenId#0",
        "newTotal#0"
      ]
    },
    "3498": {
      "callsub": "smart_contracts/we_lend/weLendContract.algo.ts::WeLend.updateCollateralTotal",
      "op": "callsub updateCollateralTotal",
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ]
    },
    "3501": {
      "retsub": true,
      "op": "retsub"
    },
    "3502": {
      "block": "buyout_bool_false@4",
      "stack_in": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "tmp%0#0",
        "currentLoanRecord#0",
        "collateralAmount#0",
        "debtAmount#0",
        "collateralTokenId#0",
        "tmp%7#0",
        "buyoutPrice#0",
        "and_result%0#0"
      ]
    },
    "3503": {
      "op": "b buyout_bool_merge@5"
    }
  }
}